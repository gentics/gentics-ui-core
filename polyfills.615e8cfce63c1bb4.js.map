{"version":3,"file":"polyfills.615e8cfce63c1bb4.js","mappings":"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","names":["F","ne","j","se","Object","writable","W","oe","ae","Ge","s","n","done","value","e","f","Me","Fe","Ie","ke","window","global","performance","name","mark","label","measure","symbolPrefix","__Zone_symbol_prefix","checkDuplicate","__symbol__","Zone","Error","nativeMicroTaskQueuePromise","parent","zoneSpec","this","_parent","_name","_properties","properties","_zoneDelegate","_ZoneDelegate","key","zone","getZoneWith","current","hasOwnProperty","fork","callback","source","_callback","intercept","runGuarded","arguments","applyThis","applyArgs","_currentZoneFrame","invoke","error","handleError","task","NO_ZONE","state","notScheduled","type","eventTask","macroTask","reEntryGuard","running","_transitionTo","scheduled","runCount","previousTask","_currentTask","data","isPeriodic","cancelFn","undefined","invokeTask","unknown","_updateTaskCount","newZone","scheduling","zoneDelegates","_zoneDelegates","_zone","scheduleTask","err","customSchedule","ZoneTask","microTask","customCancel","canceling","cancelTask","count","i","length","Promise","patches","ZoneAwarePromise","fn","ignoreDuplicate","perfName","_api","performanceMeasure","T","DELEGATE_ZS","onHasTask","delegate","_","target","hasTaskState","hasTask","onScheduleTask","onInvokeTask","onCancelTask","parentDelegate","_taskCounts","_parentDelegate","_forkZS","onFork","_forkDlgt","_forkCurrZone","_interceptZS","onIntercept","_interceptDlgt","_interceptCurrZone","_invokeZS","onInvoke","_invokeDlgt","_invokeCurrZone","_handleErrorZS","onHandleError","_handleErrorDlgt","_handleErrorCurrZone","_scheduleTaskZS","_scheduleTaskDlgt","_scheduleTaskCurrZone","_invokeTaskZS","_invokeTaskDlgt","_invokeTaskCurrZone","_cancelTaskZS","_cancelTaskDlgt","_cancelTaskCurrZone","_hasTaskZS","_hasTaskDlgt","_hasTaskDlgtOwner","_hasTaskCurrZone","zoneSpecHasTask","targetZone","apply","returnTask","push","scheduleFn","scheduleMicroTask","isEmpty","counts","prev","next","change","options","_state","self","useG","call","toState","fromState1","fromState2","handleId","toString","prototype","args","_numberOfNestedTaskFrames","runTask","drainMicroTaskQueue","symbolSetTimeout","symbolPromise","symbolThen","_microTaskQueue","_isDrainingMicrotaskQueue","func","resolve","nativeThen","then","nativeScheduleMicroTask","queue","onUnhandledError","microtaskDrainDone","symbol","currentZoneFrame","noop","showUncaughtError","patchEventTarget","patchOnProperties","patchMethod","bindArguments","patchThen","patchMacroTask","patchEventPrototype","isIEOrEdge","getGlobalObjects","ObjectDefineProperty","ObjectGetOwnPropertyDescriptor","ObjectCreate","ArraySlice","patchClass","wrapWithCurrentZone","filterProperties","attachOriginToPatched","_redefineProperty","patchCallbacks","getOwnPropertyDescriptor","defineProperty","ObjectGetPrototypeOf","getPrototypeOf","create","Array","slice","ADD_EVENT_LISTENER_STR","REMOVE_EVENT_LISTENER_STR","ZONE_SYMBOL_ADD_EVENT_LISTENER","ZONE_SYMBOL_REMOVE_EVENT_LISTENER","TRUE_STR","FALSE_STR","ZONE_SYMBOL_PREFIX","wrap","scheduleMacroTask","zoneSymbol","isWindowExists","internalWindow","_global","propertyDesc","get","set","isWebWorker","WorkerGlobalScope","isNode","process","isBrowser","HTMLElement","isMix","zoneSymbolEventNames$1","wrapFn","event","eventNameSymbol","result","listener","errorEvent","message","filename","lineno","colno","preventDefault","obj","prop","desc","enumerable","configurable","onPropPatchedSymbol","originalDescGet","originalDescSet","eventName","substr","newValue","removeEventListener","addEventListener","REMOVE_ATTRIBUTE","removeAttribute","patchProperty","onProperties","originalInstanceKey","className","OriginalClass","a","instance","patchFn","proto","delegateName","isPropertyWritable","patchDelegate","funcName","metaCreator","setNative","cbIdx","meta","scheduleMacroTaskWithCurrentZone","patched","original","isDetectedIEOrEdge","ieOrEdge","ua","navigator","userAgent","indexOf","__load_patch","api","_uncaughtPromiseErrors","isDisableWrappingUncaughtPromiseRejection","rejection","console","stack","uncaughtPromiseError","shift","throwOriginal","handler","UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL","handleUnhandledRejection","reject","symbolState","symbolValue","symbolFinally","symbolParentPromiseValue","symbolParentPromiseState","UNRESOLVED","RESOLVED","REJECTED","promise","v","resolvePromise","CURRENT_TASK_TRACE_SYMBOL","onceWrapper","wasCalled","wrappedFunction","once","TypeError","clearRejectedNoCatch","makeResolver","trace","currentTask","creationTrace","scheduleResolveOrReject","constructor","JSON","stringify","readableObjectToString","REJECTION_HANDLED_HANDLER","splice","chainPromise","onFulfilled","onRejected","promiseState","forwardResolution","forwardRejection","parentPromiseValue","isFinallyPromise","run","AggregateError","executor","C","Symbol","species","onFinally","values","iterator","promises","D","H","finished","errors","res","rej","G","isThenable","onResolve","onReject","$","allWithCallback","thenCallback","status","errorCallback","reason","he","unresolvedCount","valueIndex","resolvedValues","b","curValueIndex","thenErr","ue","Te","h","toStringTag","race","all","NativePromise","symbolThenPatched","Ctor","originalThen","resultPromise","ctor","zoneify","originalFunctionToString","Function","ORIGINAL_DELEGATE_SYMBOL","PROMISE_SYMBOL","ERROR_SYMBOL","newFunctionToString","originalDelegate","nativePromise","nativeError","originalObjectToString","passiveSupported","OPTIMIZED_ZONE_EVENT_TASK_DATA","zoneSymbolEventNames","globalSources","EVENT_NAME_SYMBOL_REGX","RegExp","IMMEDIATE_PROPAGATION_SYMBOL","eventNameToString","falseEventName","trueEventName","symbolCapture","apis","patchOptions","ADD_EVENT_LISTENER","add","REMOVE_EVENT_LISTENER","rm","LISTENERS_EVENT_LISTENER","listeners","REMOVE_ALL_LISTENERS_EVENT_LISTENER","rmAll","zoneSymbolAddEventListener","ADD_EVENT_LISTENER_SOURCE","isRemoved","handleEvent","context","isCapture","tasks","copyTasks","L","globalZoneAwareCallback","globalCallback","globalZoneAwareCaptureCallback","useGlobalCallback","validateHandler","vh","chkDup","returnTarget","rt","nativePrependEventListener","taskData","nativeAddEventListener","nativeRemoveEventListener","nativeListeners","nativeRemoveAllListeners","passive","capture","assign","prepend","isExisting","symbolEventName","symbolEventNames","existingTasks","allRemoved","compare","diff","typeOfDelegate","unpatchedEvents","passiveEvents","makeAddListener","nativeListener","addSource","customScheduleFn","customCancelFn","transferEventName","isHandleEvent","buildEventListenerOptions","prepareEventNames","constructorName","targetSource","scheduleEventTask","x","unshift","PREPEND_EVENT_LISTENER","E","existingTask","onPropertySymbol","findEventTasks","symbolCaptureEventName","captureTasks","removeTasks","keys","match","exec","evtName","results","patchEventTargetMethods","foundTasks","captureFalseTasks","captureTrueTasks","concat","Event","targetName","method","callbacks","nativeDelegate","opts","forEach","descriptor","ignoreProperties","tip","filter","ip","targetIgnoreProperties","op","getOwnPropertyNames","startsWith","map","substring","eventNames","getOnEventNames","SYMBOL_BLACK_LISTED_EVENTS","SYMBOL_UNPATCHED_EVENTS","taskSymbol","setName","cancelName","nameSuffix","clearNative","tasksByHandleId","delay","clearTask","handle","ref","unref","bind","id","N","legacyPatch","clear","patchTimer","blockingMethods","patchEvent","EVENT_TARGET","EventTarget","eventTargetPatch","XMLHttpRequestEventTarget","__Zone_ignore_on_properties","patchTargets","ignoreErrorProperties","isIE","patchFilteredProperties","propertyDescriptorPatch","customElements","patchCustomElements","XMLHttpRequest","XMLHttpRequestPrototype","oriAddListener","oriRemoveListener","XMLHttpRequestEventTargetPrototype","READY_STATE_CHANGE","SCHEDULED","openNative","XHR_SYNC","XHR_URL","fetchTaskAborting","fetchTaskScheduling","sendNative","url","aborted","placeholderCallback","XHR_ERROR_BEFORE_SCHEDULED","abortNative","XHR_TASK","findPendingTask","XHR_SCHEDULED","XHR_LISTENER","newListener","readyState","DONE","loadTasks","oriInvoke","patchXHR","geolocation","fnNames","patchPrototype","PromiseRejectionEvent","evt","findPromiseRejectionHandler"],"sourceRoot":"webpack:///","sources":["./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","./node_modules/@babel/runtime/helpers/classCallCheck.js","./node_modules/@babel/runtime/helpers/createClass.js","./node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js","./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","./src/docs/polyfills.ts","./node_modules/zone.js/fesm2015/zone.js"],"sourcesContent":["function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nmodule.exports = _createForOfIteratorHelper, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","/**\n * This file includes polyfills needed by Angular and is loaded before the app.\n * You can add your own extra polyfills to this file.\n *\n * This file is divided into 2 sections:\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\n *      file.\n *\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\n * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),\n * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.\n *\n * Learn more in https://angular.io/guide/browser-support\n */\n\n/***************************************************************************************************\n * BROWSER POLYFILLS\n */\n\n/** IE9, IE10, IE11, and Chrome <55 requires all of the following polyfills.\n *  This also includes Android Emulators with older versions of Chrome and Google Search/Googlebot\n */\n\n// import 'core-js/es/symbol';\n// import 'core-js/es/object';\n// import 'core-js/es/function';\n// import 'core-js/es/parse-int';\n// import 'core-js/es/parse-float';\n// import 'core-js/es/number';\n// import 'core-js/es/math';\n// import 'core-js/es/string';\n// import 'core-js/es/date';\n// import 'core-js/es/array';\n// import 'core-js/es/regexp';\n// import 'core-js/es/map';\n// import 'core-js/es/weak-map';\n// import 'core-js/es/set';\n\n/** IE10 and IE11 requires the following for the Reflect API. */\n// import 'core-js/es/reflect';  // Run `npm install --save web-animations-js`.\n\n/**\n * By default, zone.js will patch all possible macroTask and DomEvents\n * user can disable parts of macroTask/DomEvents patch by setting following flags\n * because those flags need to be set before `zone.js` being loaded, and webpack\n * will put import in the top of bundle, so user need to create a separate file\n * in this directory (for example: zone-flags.ts), and put the following flags\n * into that file, and then add the following code before importing zone.js.\n * import './zone-flags.ts';\n *\n * The flags allowed in zone-flags.ts are listed here.\n *\n * The following flags will work for all browsers.\n *\n * (window as any).__Zone_disable_requestAnimationFrame = true; // disable patch requestAnimationFrame\n * (window as any).__Zone_disable_on_property = true; // disable patch onProperty such as onclick\n * (window as any).__zone_symbol__BLACK_LISTED_EVENTS = ['scroll', 'mousemove']; // disable patch specified eventNames\n *\n *  in IE/Edge developer tools, the addEventListener will also be wrapped by zone.js\n *  with the following flag, it will bypass `zone.js` patch for IE/Edge\n *\n *  (window as any).__Zone_enable_cross_context_check = true;\n *\n */\n\n/***************************************************************************************************\n * Zone JS is required by default for Angular itself.\n */\nimport 'zone.js';  // Included with Angular CLI.\n\n\n/***************************************************************************************************\n * APPLICATION IMPORTS\n */\n// This is necessary, because GUIC uses the Intl library, which requires a global object (like in Node.js).\n(window as any).global = window;\n","'use strict';\n/**\n * @license Angular v14.0.0-next.5\n * (c) 2010-2022 Google LLC. https://angular.io/\n * License: MIT\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n((function (global) {\n    const performance = global['performance'];\n    function mark(name) {\n        performance && performance['mark'] && performance['mark'](name);\n    }\n    function performanceMeasure(name, label) {\n        performance && performance['measure'] && performance['measure'](name, label);\n    }\n    mark('Zone');\n    // Initialize before it's accessed below.\n    // __Zone_symbol_prefix global can be used to override the default zone\n    // symbol prefix with a custom one if needed.\n    const symbolPrefix = global['__Zone_symbol_prefix'] || '__zone_symbol__';\n    function __symbol__(name) {\n        return symbolPrefix + name;\n    }\n    const checkDuplicate = global[__symbol__('forceDuplicateZoneCheck')] === true;\n    if (global['Zone']) {\n        // if global['Zone'] already exists (maybe zone.js was already loaded or\n        // some other lib also registered a global object named Zone), we may need\n        // to throw an error, but sometimes user may not want this error.\n        // For example,\n        // we have two web pages, page1 includes zone.js, page2 doesn't.\n        // and the 1st time user load page1 and page2, everything work fine,\n        // but when user load page2 again, error occurs because global['Zone'] already exists.\n        // so we add a flag to let user choose whether to throw this error or not.\n        // By default, if existing Zone is from zone.js, we will not throw the error.\n        if (checkDuplicate || typeof global['Zone'].__symbol__ !== 'function') {\n            throw new Error('Zone already loaded.');\n        }\n        else {\n            return global['Zone'];\n        }\n    }\n    class Zone {\n        constructor(parent, zoneSpec) {\n            this._parent = parent;\n            this._name = zoneSpec ? zoneSpec.name || 'unnamed' : '<root>';\n            this._properties = zoneSpec && zoneSpec.properties || {};\n            this._zoneDelegate =\n                new _ZoneDelegate(this, this._parent && this._parent._zoneDelegate, zoneSpec);\n        }\n        static assertZonePatched() {\n            if (global['Promise'] !== patches['ZoneAwarePromise']) {\n                throw new Error('Zone.js has detected that ZoneAwarePromise `(window|global).Promise` ' +\n                    'has been overwritten.\\n' +\n                    'Most likely cause is that a Promise polyfill has been loaded ' +\n                    'after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. ' +\n                    'If you must load one, do so before loading zone.js.)');\n            }\n        }\n        static get root() {\n            let zone = Zone.current;\n            while (zone.parent) {\n                zone = zone.parent;\n            }\n            return zone;\n        }\n        static get current() {\n            return _currentZoneFrame.zone;\n        }\n        static get currentTask() {\n            return _currentTask;\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        static __load_patch(name, fn, ignoreDuplicate = false) {\n            if (patches.hasOwnProperty(name)) {\n                // `checkDuplicate` option is defined from global variable\n                // so it works for all modules.\n                // `ignoreDuplicate` can work for the specified module\n                if (!ignoreDuplicate && checkDuplicate) {\n                    throw Error('Already loaded patch: ' + name);\n                }\n            }\n            else if (!global['__Zone_disable_' + name]) {\n                const perfName = 'Zone:' + name;\n                mark(perfName);\n                patches[name] = fn(global, Zone, _api);\n                performanceMeasure(perfName, perfName);\n            }\n        }\n        get parent() {\n            return this._parent;\n        }\n        get name() {\n            return this._name;\n        }\n        get(key) {\n            const zone = this.getZoneWith(key);\n            if (zone)\n                return zone._properties[key];\n        }\n        getZoneWith(key) {\n            let current = this;\n            while (current) {\n                if (current._properties.hasOwnProperty(key)) {\n                    return current;\n                }\n                current = current._parent;\n            }\n            return null;\n        }\n        fork(zoneSpec) {\n            if (!zoneSpec)\n                throw new Error('ZoneSpec required!');\n            return this._zoneDelegate.fork(this, zoneSpec);\n        }\n        wrap(callback, source) {\n            if (typeof callback !== 'function') {\n                throw new Error('Expecting function got: ' + callback);\n            }\n            const _callback = this._zoneDelegate.intercept(this, callback, source);\n            const zone = this;\n            return function () {\n                return zone.runGuarded(_callback, this, arguments, source);\n            };\n        }\n        run(callback, applyThis, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runGuarded(callback, applyThis = null, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                try {\n                    return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runTask(task, applyThis, applyArgs) {\n            if (task.zone != this) {\n                throw new Error('A task can only be run in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n            }\n            // https://github.com/angular/zone.js/issues/778, sometimes eventTask\n            // will run in notScheduled(canceled) state, we should not try to\n            // run such kind of task but just return\n            if (task.state === notScheduled && (task.type === eventTask || task.type === macroTask)) {\n                return;\n            }\n            const reEntryGuard = task.state != running;\n            reEntryGuard && task._transitionTo(running, scheduled);\n            task.runCount++;\n            const previousTask = _currentTask;\n            _currentTask = task;\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                if (task.type == macroTask && task.data && !task.data.isPeriodic) {\n                    task.cancelFn = undefined;\n                }\n                try {\n                    return this._zoneDelegate.invokeTask(this, task, applyThis, applyArgs);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                // if the task's state is notScheduled or unknown, then it has already been cancelled\n                // we should not reset the state to scheduled\n                if (task.state !== notScheduled && task.state !== unknown) {\n                    if (task.type == eventTask || (task.data && task.data.isPeriodic)) {\n                        reEntryGuard && task._transitionTo(scheduled, running);\n                    }\n                    else {\n                        task.runCount = 0;\n                        this._updateTaskCount(task, -1);\n                        reEntryGuard &&\n                            task._transitionTo(notScheduled, running, notScheduled);\n                    }\n                }\n                _currentZoneFrame = _currentZoneFrame.parent;\n                _currentTask = previousTask;\n            }\n        }\n        scheduleTask(task) {\n            if (task.zone && task.zone !== this) {\n                // check if the task was rescheduled, the newZone\n                // should not be the children of the original zone\n                let newZone = this;\n                while (newZone) {\n                    if (newZone === task.zone) {\n                        throw Error(`can not reschedule task to ${this.name} which is descendants of the original zone ${task.zone.name}`);\n                    }\n                    newZone = newZone.parent;\n                }\n            }\n            task._transitionTo(scheduling, notScheduled);\n            const zoneDelegates = [];\n            task._zoneDelegates = zoneDelegates;\n            task._zone = this;\n            try {\n                task = this._zoneDelegate.scheduleTask(this, task);\n            }\n            catch (err) {\n                // should set task's state to unknown when scheduleTask throw error\n                // because the err may from reschedule, so the fromState maybe notScheduled\n                task._transitionTo(unknown, scheduling, notScheduled);\n                // TODO: @JiaLiPassion, should we check the result from handleError?\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            if (task._zoneDelegates === zoneDelegates) {\n                // we have to check because internally the delegate can reschedule the task.\n                this._updateTaskCount(task, 1);\n            }\n            if (task.state == scheduling) {\n                task._transitionTo(scheduled, scheduling);\n            }\n            return task;\n        }\n        scheduleMicroTask(source, callback, data, customSchedule) {\n            return this.scheduleTask(new ZoneTask(microTask, source, callback, data, customSchedule, undefined));\n        }\n        scheduleMacroTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(macroTask, source, callback, data, customSchedule, customCancel));\n        }\n        scheduleEventTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(eventTask, source, callback, data, customSchedule, customCancel));\n        }\n        cancelTask(task) {\n            if (task.zone != this)\n                throw new Error('A task can only be cancelled in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n            task._transitionTo(canceling, scheduled, running);\n            try {\n                this._zoneDelegate.cancelTask(this, task);\n            }\n            catch (err) {\n                // if error occurs when cancelTask, transit the state to unknown\n                task._transitionTo(unknown, canceling);\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            this._updateTaskCount(task, -1);\n            task._transitionTo(notScheduled, canceling);\n            task.runCount = 0;\n            return task;\n        }\n        _updateTaskCount(task, count) {\n            const zoneDelegates = task._zoneDelegates;\n            if (count == -1) {\n                task._zoneDelegates = null;\n            }\n            for (let i = 0; i < zoneDelegates.length; i++) {\n                zoneDelegates[i]._updateTaskCount(task.type, count);\n            }\n        }\n    }\n    // tslint:disable-next-line:require-internal-with-underscore\n    Zone.__symbol__ = __symbol__;\n    const DELEGATE_ZS = {\n        name: '',\n        onHasTask: (delegate, _, target, hasTaskState) => delegate.hasTask(target, hasTaskState),\n        onScheduleTask: (delegate, _, target, task) => delegate.scheduleTask(target, task),\n        onInvokeTask: (delegate, _, target, task, applyThis, applyArgs) => delegate.invokeTask(target, task, applyThis, applyArgs),\n        onCancelTask: (delegate, _, target, task) => delegate.cancelTask(target, task)\n    };\n    class _ZoneDelegate {\n        constructor(zone, parentDelegate, zoneSpec) {\n            this._taskCounts = { 'microTask': 0, 'macroTask': 0, 'eventTask': 0 };\n            this.zone = zone;\n            this._parentDelegate = parentDelegate;\n            this._forkZS = zoneSpec && (zoneSpec && zoneSpec.onFork ? zoneSpec : parentDelegate._forkZS);\n            this._forkDlgt = zoneSpec && (zoneSpec.onFork ? parentDelegate : parentDelegate._forkDlgt);\n            this._forkCurrZone =\n                zoneSpec && (zoneSpec.onFork ? this.zone : parentDelegate._forkCurrZone);\n            this._interceptZS =\n                zoneSpec && (zoneSpec.onIntercept ? zoneSpec : parentDelegate._interceptZS);\n            this._interceptDlgt =\n                zoneSpec && (zoneSpec.onIntercept ? parentDelegate : parentDelegate._interceptDlgt);\n            this._interceptCurrZone =\n                zoneSpec && (zoneSpec.onIntercept ? this.zone : parentDelegate._interceptCurrZone);\n            this._invokeZS = zoneSpec && (zoneSpec.onInvoke ? zoneSpec : parentDelegate._invokeZS);\n            this._invokeDlgt =\n                zoneSpec && (zoneSpec.onInvoke ? parentDelegate : parentDelegate._invokeDlgt);\n            this._invokeCurrZone =\n                zoneSpec && (zoneSpec.onInvoke ? this.zone : parentDelegate._invokeCurrZone);\n            this._handleErrorZS =\n                zoneSpec && (zoneSpec.onHandleError ? zoneSpec : parentDelegate._handleErrorZS);\n            this._handleErrorDlgt =\n                zoneSpec && (zoneSpec.onHandleError ? parentDelegate : parentDelegate._handleErrorDlgt);\n            this._handleErrorCurrZone =\n                zoneSpec && (zoneSpec.onHandleError ? this.zone : parentDelegate._handleErrorCurrZone);\n            this._scheduleTaskZS =\n                zoneSpec && (zoneSpec.onScheduleTask ? zoneSpec : parentDelegate._scheduleTaskZS);\n            this._scheduleTaskDlgt = zoneSpec &&\n                (zoneSpec.onScheduleTask ? parentDelegate : parentDelegate._scheduleTaskDlgt);\n            this._scheduleTaskCurrZone =\n                zoneSpec && (zoneSpec.onScheduleTask ? this.zone : parentDelegate._scheduleTaskCurrZone);\n            this._invokeTaskZS =\n                zoneSpec && (zoneSpec.onInvokeTask ? zoneSpec : parentDelegate._invokeTaskZS);\n            this._invokeTaskDlgt =\n                zoneSpec && (zoneSpec.onInvokeTask ? parentDelegate : parentDelegate._invokeTaskDlgt);\n            this._invokeTaskCurrZone =\n                zoneSpec && (zoneSpec.onInvokeTask ? this.zone : parentDelegate._invokeTaskCurrZone);\n            this._cancelTaskZS =\n                zoneSpec && (zoneSpec.onCancelTask ? zoneSpec : parentDelegate._cancelTaskZS);\n            this._cancelTaskDlgt =\n                zoneSpec && (zoneSpec.onCancelTask ? parentDelegate : parentDelegate._cancelTaskDlgt);\n            this._cancelTaskCurrZone =\n                zoneSpec && (zoneSpec.onCancelTask ? this.zone : parentDelegate._cancelTaskCurrZone);\n            this._hasTaskZS = null;\n            this._hasTaskDlgt = null;\n            this._hasTaskDlgtOwner = null;\n            this._hasTaskCurrZone = null;\n            const zoneSpecHasTask = zoneSpec && zoneSpec.onHasTask;\n            const parentHasTask = parentDelegate && parentDelegate._hasTaskZS;\n            if (zoneSpecHasTask || parentHasTask) {\n                // If we need to report hasTask, than this ZS needs to do ref counting on tasks. In such\n                // a case all task related interceptors must go through this ZD. We can't short circuit it.\n                this._hasTaskZS = zoneSpecHasTask ? zoneSpec : DELEGATE_ZS;\n                this._hasTaskDlgt = parentDelegate;\n                this._hasTaskDlgtOwner = this;\n                this._hasTaskCurrZone = zone;\n                if (!zoneSpec.onScheduleTask) {\n                    this._scheduleTaskZS = DELEGATE_ZS;\n                    this._scheduleTaskDlgt = parentDelegate;\n                    this._scheduleTaskCurrZone = this.zone;\n                }\n                if (!zoneSpec.onInvokeTask) {\n                    this._invokeTaskZS = DELEGATE_ZS;\n                    this._invokeTaskDlgt = parentDelegate;\n                    this._invokeTaskCurrZone = this.zone;\n                }\n                if (!zoneSpec.onCancelTask) {\n                    this._cancelTaskZS = DELEGATE_ZS;\n                    this._cancelTaskDlgt = parentDelegate;\n                    this._cancelTaskCurrZone = this.zone;\n                }\n            }\n        }\n        fork(targetZone, zoneSpec) {\n            return this._forkZS ? this._forkZS.onFork(this._forkDlgt, this.zone, targetZone, zoneSpec) :\n                new Zone(targetZone, zoneSpec);\n        }\n        intercept(targetZone, callback, source) {\n            return this._interceptZS ?\n                this._interceptZS.onIntercept(this._interceptDlgt, this._interceptCurrZone, targetZone, callback, source) :\n                callback;\n        }\n        invoke(targetZone, callback, applyThis, applyArgs, source) {\n            return this._invokeZS ? this._invokeZS.onInvoke(this._invokeDlgt, this._invokeCurrZone, targetZone, callback, applyThis, applyArgs, source) :\n                callback.apply(applyThis, applyArgs);\n        }\n        handleError(targetZone, error) {\n            return this._handleErrorZS ?\n                this._handleErrorZS.onHandleError(this._handleErrorDlgt, this._handleErrorCurrZone, targetZone, error) :\n                true;\n        }\n        scheduleTask(targetZone, task) {\n            let returnTask = task;\n            if (this._scheduleTaskZS) {\n                if (this._hasTaskZS) {\n                    returnTask._zoneDelegates.push(this._hasTaskDlgtOwner);\n                }\n                // clang-format off\n                returnTask = this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this._scheduleTaskCurrZone, targetZone, task);\n                // clang-format on\n                if (!returnTask)\n                    returnTask = task;\n            }\n            else {\n                if (task.scheduleFn) {\n                    task.scheduleFn(task);\n                }\n                else if (task.type == microTask) {\n                    scheduleMicroTask(task);\n                }\n                else {\n                    throw new Error('Task is missing scheduleFn.');\n                }\n            }\n            return returnTask;\n        }\n        invokeTask(targetZone, task, applyThis, applyArgs) {\n            return this._invokeTaskZS ? this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt, this._invokeTaskCurrZone, targetZone, task, applyThis, applyArgs) :\n                task.callback.apply(applyThis, applyArgs);\n        }\n        cancelTask(targetZone, task) {\n            let value;\n            if (this._cancelTaskZS) {\n                value = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this._cancelTaskCurrZone, targetZone, task);\n            }\n            else {\n                if (!task.cancelFn) {\n                    throw Error('Task is not cancelable');\n                }\n                value = task.cancelFn(task);\n            }\n            return value;\n        }\n        hasTask(targetZone, isEmpty) {\n            // hasTask should not throw error so other ZoneDelegate\n            // can still trigger hasTask callback\n            try {\n                this._hasTaskZS &&\n                    this._hasTaskZS.onHasTask(this._hasTaskDlgt, this._hasTaskCurrZone, targetZone, isEmpty);\n            }\n            catch (err) {\n                this.handleError(targetZone, err);\n            }\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        _updateTaskCount(type, count) {\n            const counts = this._taskCounts;\n            const prev = counts[type];\n            const next = counts[type] = prev + count;\n            if (next < 0) {\n                throw new Error('More tasks executed then were scheduled.');\n            }\n            if (prev == 0 || next == 0) {\n                const isEmpty = {\n                    microTask: counts['microTask'] > 0,\n                    macroTask: counts['macroTask'] > 0,\n                    eventTask: counts['eventTask'] > 0,\n                    change: type\n                };\n                this.hasTask(this.zone, isEmpty);\n            }\n        }\n    }\n    class ZoneTask {\n        constructor(type, source, callback, options, scheduleFn, cancelFn) {\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._zone = null;\n            this.runCount = 0;\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._zoneDelegates = null;\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._state = 'notScheduled';\n            this.type = type;\n            this.source = source;\n            this.data = options;\n            this.scheduleFn = scheduleFn;\n            this.cancelFn = cancelFn;\n            if (!callback) {\n                throw new Error('callback is not defined');\n            }\n            this.callback = callback;\n            const self = this;\n            // TODO: @JiaLiPassion options should have interface\n            if (type === eventTask && options && options.useG) {\n                this.invoke = ZoneTask.invokeTask;\n            }\n            else {\n                this.invoke = function () {\n                    return ZoneTask.invokeTask.call(global, self, this, arguments);\n                };\n            }\n        }\n        static invokeTask(task, target, args) {\n            if (!task) {\n                task = this;\n            }\n            _numberOfNestedTaskFrames++;\n            try {\n                task.runCount++;\n                return task.zone.runTask(task, target, args);\n            }\n            finally {\n                if (_numberOfNestedTaskFrames == 1) {\n                    drainMicroTaskQueue();\n                }\n                _numberOfNestedTaskFrames--;\n            }\n        }\n        get zone() {\n            return this._zone;\n        }\n        get state() {\n            return this._state;\n        }\n        cancelScheduleRequest() {\n            this._transitionTo(notScheduled, scheduling);\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        _transitionTo(toState, fromState1, fromState2) {\n            if (this._state === fromState1 || this._state === fromState2) {\n                this._state = toState;\n                if (toState == notScheduled) {\n                    this._zoneDelegates = null;\n                }\n            }\n            else {\n                throw new Error(`${this.type} '${this.source}': can not transition to '${toState}', expecting state '${fromState1}'${fromState2 ? ' or \\'' + fromState2 + '\\'' : ''}, was '${this._state}'.`);\n            }\n        }\n        toString() {\n            if (this.data && typeof this.data.handleId !== 'undefined') {\n                return this.data.handleId.toString();\n            }\n            else {\n                return Object.prototype.toString.call(this);\n            }\n        }\n        // add toJSON method to prevent cyclic error when\n        // call JSON.stringify(zoneTask)\n        toJSON() {\n            return {\n                type: this.type,\n                state: this.state,\n                source: this.source,\n                zone: this.zone.name,\n                runCount: this.runCount\n            };\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  MICROTASK QUEUE\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const symbolSetTimeout = __symbol__('setTimeout');\n    const symbolPromise = __symbol__('Promise');\n    const symbolThen = __symbol__('then');\n    let _microTaskQueue = [];\n    let _isDrainingMicrotaskQueue = false;\n    let nativeMicroTaskQueuePromise;\n    function nativeScheduleMicroTask(func) {\n        if (!nativeMicroTaskQueuePromise) {\n            if (global[symbolPromise]) {\n                nativeMicroTaskQueuePromise = global[symbolPromise].resolve(0);\n            }\n        }\n        if (nativeMicroTaskQueuePromise) {\n            let nativeThen = nativeMicroTaskQueuePromise[symbolThen];\n            if (!nativeThen) {\n                // native Promise is not patchable, we need to use `then` directly\n                // issue 1078\n                nativeThen = nativeMicroTaskQueuePromise['then'];\n            }\n            nativeThen.call(nativeMicroTaskQueuePromise, func);\n        }\n        else {\n            global[symbolSetTimeout](func, 0);\n        }\n    }\n    function scheduleMicroTask(task) {\n        // if we are not running in any task, and there has not been anything scheduled\n        // we must bootstrap the initial task creation by manually scheduling the drain\n        if (_numberOfNestedTaskFrames === 0 && _microTaskQueue.length === 0) {\n            // We are not running in Task, so we need to kickstart the microtask queue.\n            nativeScheduleMicroTask(drainMicroTaskQueue);\n        }\n        task && _microTaskQueue.push(task);\n    }\n    function drainMicroTaskQueue() {\n        if (!_isDrainingMicrotaskQueue) {\n            _isDrainingMicrotaskQueue = true;\n            while (_microTaskQueue.length) {\n                const queue = _microTaskQueue;\n                _microTaskQueue = [];\n                for (let i = 0; i < queue.length; i++) {\n                    const task = queue[i];\n                    try {\n                        task.zone.runTask(task, null, null);\n                    }\n                    catch (error) {\n                        _api.onUnhandledError(error);\n                    }\n                }\n            }\n            _api.microtaskDrainDone();\n            _isDrainingMicrotaskQueue = false;\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  BOOTSTRAP\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const NO_ZONE = { name: 'NO ZONE' };\n    const notScheduled = 'notScheduled', scheduling = 'scheduling', scheduled = 'scheduled', running = 'running', canceling = 'canceling', unknown = 'unknown';\n    const microTask = 'microTask', macroTask = 'macroTask', eventTask = 'eventTask';\n    const patches = {};\n    const _api = {\n        symbol: __symbol__,\n        currentZoneFrame: () => _currentZoneFrame,\n        onUnhandledError: noop,\n        microtaskDrainDone: noop,\n        scheduleMicroTask: scheduleMicroTask,\n        showUncaughtError: () => !Zone[__symbol__('ignoreConsoleErrorUncaughtError')],\n        patchEventTarget: () => [],\n        patchOnProperties: noop,\n        patchMethod: () => noop,\n        bindArguments: () => [],\n        patchThen: () => noop,\n        patchMacroTask: () => noop,\n        patchEventPrototype: () => noop,\n        isIEOrEdge: () => false,\n        getGlobalObjects: () => undefined,\n        ObjectDefineProperty: () => noop,\n        ObjectGetOwnPropertyDescriptor: () => undefined,\n        ObjectCreate: () => undefined,\n        ArraySlice: () => [],\n        patchClass: () => noop,\n        wrapWithCurrentZone: () => noop,\n        filterProperties: () => [],\n        attachOriginToPatched: () => noop,\n        _redefineProperty: () => noop,\n        patchCallbacks: () => noop,\n        nativeScheduleMicroTask: nativeScheduleMicroTask\n    };\n    let _currentZoneFrame = { parent: null, zone: new Zone(null, null) };\n    let _currentTask = null;\n    let _numberOfNestedTaskFrames = 0;\n    function noop() { }\n    performanceMeasure('Zone', 'Zone');\n    return global['Zone'] = Zone;\n}))(typeof window !== 'undefined' && window || typeof self !== 'undefined' && self || global);\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Suppress closure compiler errors about unknown 'Zone' variable\n * @fileoverview\n * @suppress {undefinedVars,globalThis,missingRequire}\n */\n/// <reference types=\"node\"/>\n// issue #989, to reduce bundle size, use short name\n/** Object.getOwnPropertyDescriptor */\nconst ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n/** Object.defineProperty */\nconst ObjectDefineProperty = Object.defineProperty;\n/** Object.getPrototypeOf */\nconst ObjectGetPrototypeOf = Object.getPrototypeOf;\n/** Object.create */\nconst ObjectCreate = Object.create;\n/** Array.prototype.slice */\nconst ArraySlice = Array.prototype.slice;\n/** addEventListener string const */\nconst ADD_EVENT_LISTENER_STR = 'addEventListener';\n/** removeEventListener string const */\nconst REMOVE_EVENT_LISTENER_STR = 'removeEventListener';\n/** zoneSymbol addEventListener */\nconst ZONE_SYMBOL_ADD_EVENT_LISTENER = Zone.__symbol__(ADD_EVENT_LISTENER_STR);\n/** zoneSymbol removeEventListener */\nconst ZONE_SYMBOL_REMOVE_EVENT_LISTENER = Zone.__symbol__(REMOVE_EVENT_LISTENER_STR);\n/** true string const */\nconst TRUE_STR = 'true';\n/** false string const */\nconst FALSE_STR = 'false';\n/** Zone symbol prefix string const. */\nconst ZONE_SYMBOL_PREFIX = Zone.__symbol__('');\nfunction wrapWithCurrentZone(callback, source) {\n    return Zone.current.wrap(callback, source);\n}\nfunction scheduleMacroTaskWithCurrentZone(source, callback, data, customSchedule, customCancel) {\n    return Zone.current.scheduleMacroTask(source, callback, data, customSchedule, customCancel);\n}\nconst zoneSymbol = Zone.__symbol__;\nconst isWindowExists = typeof window !== 'undefined';\nconst internalWindow = isWindowExists ? window : undefined;\nconst _global = isWindowExists && internalWindow || typeof self === 'object' && self || global;\nconst REMOVE_ATTRIBUTE = 'removeAttribute';\nfunction bindArguments(args, source) {\n    for (let i = args.length - 1; i >= 0; i--) {\n        if (typeof args[i] === 'function') {\n            args[i] = wrapWithCurrentZone(args[i], source + '_' + i);\n        }\n    }\n    return args;\n}\nfunction patchPrototype(prototype, fnNames) {\n    const source = prototype.constructor['name'];\n    for (let i = 0; i < fnNames.length; i++) {\n        const name = fnNames[i];\n        const delegate = prototype[name];\n        if (delegate) {\n            const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, name);\n            if (!isPropertyWritable(prototypeDesc)) {\n                continue;\n            }\n            prototype[name] = ((delegate) => {\n                const patched = function () {\n                    return delegate.apply(this, bindArguments(arguments, source + '.' + name));\n                };\n                attachOriginToPatched(patched, delegate);\n                return patched;\n            })(delegate);\n        }\n    }\n}\nfunction isPropertyWritable(propertyDesc) {\n    if (!propertyDesc) {\n        return true;\n    }\n    if (propertyDesc.writable === false) {\n        return false;\n    }\n    return !(typeof propertyDesc.get === 'function' && typeof propertyDesc.set === 'undefined');\n}\nconst isWebWorker = (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope);\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isNode = (!('nw' in _global) && typeof _global.process !== 'undefined' &&\n    {}.toString.call(_global.process) === '[object process]');\nconst isBrowser = !isNode && !isWebWorker && !!(isWindowExists && internalWindow['HTMLElement']);\n// we are in electron of nw, so we are both browser and nodejs\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isMix = typeof _global.process !== 'undefined' &&\n    {}.toString.call(_global.process) === '[object process]' && !isWebWorker &&\n    !!(isWindowExists && internalWindow['HTMLElement']);\nconst zoneSymbolEventNames$1 = {};\nconst wrapFn = function (event) {\n    // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n    // event will be undefined, so we need to use window.event\n    event = event || _global.event;\n    if (!event) {\n        return;\n    }\n    let eventNameSymbol = zoneSymbolEventNames$1[event.type];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames$1[event.type] = zoneSymbol('ON_PROPERTY' + event.type);\n    }\n    const target = this || event.target || _global;\n    const listener = target[eventNameSymbol];\n    let result;\n    if (isBrowser && target === internalWindow && event.type === 'error') {\n        // window.onerror have different signiture\n        // https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror#window.onerror\n        // and onerror callback will prevent default when callback return true\n        const errorEvent = event;\n        result = listener &&\n            listener.call(this, errorEvent.message, errorEvent.filename, errorEvent.lineno, errorEvent.colno, errorEvent.error);\n        if (result === true) {\n            event.preventDefault();\n        }\n    }\n    else {\n        result = listener && listener.apply(this, arguments);\n        if (result != undefined && !result) {\n            event.preventDefault();\n        }\n    }\n    return result;\n};\nfunction patchProperty(obj, prop, prototype) {\n    let desc = ObjectGetOwnPropertyDescriptor(obj, prop);\n    if (!desc && prototype) {\n        // when patch window object, use prototype to check prop exist or not\n        const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, prop);\n        if (prototypeDesc) {\n            desc = { enumerable: true, configurable: true };\n        }\n    }\n    // if the descriptor not exists or is not configurable\n    // just return\n    if (!desc || !desc.configurable) {\n        return;\n    }\n    const onPropPatchedSymbol = zoneSymbol('on' + prop + 'patched');\n    if (obj.hasOwnProperty(onPropPatchedSymbol) && obj[onPropPatchedSymbol]) {\n        return;\n    }\n    // A property descriptor cannot have getter/setter and be writable\n    // deleting the writable and value properties avoids this error:\n    //\n    // TypeError: property descriptors must not specify a value or be writable when a\n    // getter or setter has been specified\n    delete desc.writable;\n    delete desc.value;\n    const originalDescGet = desc.get;\n    const originalDescSet = desc.set;\n    // substr(2) cuz 'onclick' -> 'click', etc\n    const eventName = prop.substr(2);\n    let eventNameSymbol = zoneSymbolEventNames$1[eventName];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames$1[eventName] = zoneSymbol('ON_PROPERTY' + eventName);\n    }\n    desc.set = function (newValue) {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return;\n        }\n        const previousValue = target[eventNameSymbol];\n        if (typeof previousValue === 'function') {\n            target.removeEventListener(eventName, wrapFn);\n        }\n        // issue #978, when onload handler was added before loading zone.js\n        // we should remove it with originalDescSet\n        originalDescSet && originalDescSet.call(target, null);\n        target[eventNameSymbol] = newValue;\n        if (typeof newValue === 'function') {\n            target.addEventListener(eventName, wrapFn, false);\n        }\n    };\n    // The getter would return undefined for unassigned properties but the default value of an\n    // unassigned property is null\n    desc.get = function () {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return null;\n        }\n        const listener = target[eventNameSymbol];\n        if (listener) {\n            return listener;\n        }\n        else if (originalDescGet) {\n            // result will be null when use inline event attribute,\n            // such as <button onclick=\"func();\">OK</button>\n            // because the onclick function is internal raw uncompiled handler\n            // the onclick will be evaluated when first time event was triggered or\n            // the property is accessed, https://github.com/angular/zone.js/issues/525\n            // so we should use original native get to retrieve the handler\n            let value = originalDescGet.call(this);\n            if (value) {\n                desc.set.call(this, value);\n                if (typeof target[REMOVE_ATTRIBUTE] === 'function') {\n                    target.removeAttribute(prop);\n                }\n                return value;\n            }\n        }\n        return null;\n    };\n    ObjectDefineProperty(obj, prop, desc);\n    obj[onPropPatchedSymbol] = true;\n}\nfunction patchOnProperties(obj, properties, prototype) {\n    if (properties) {\n        for (let i = 0; i < properties.length; i++) {\n            patchProperty(obj, 'on' + properties[i], prototype);\n        }\n    }\n    else {\n        const onProperties = [];\n        for (const prop in obj) {\n            if (prop.substr(0, 2) == 'on') {\n                onProperties.push(prop);\n            }\n        }\n        for (let j = 0; j < onProperties.length; j++) {\n            patchProperty(obj, onProperties[j], prototype);\n        }\n    }\n}\nconst originalInstanceKey = zoneSymbol('originalInstance');\n// wrap some native API on `window`\nfunction patchClass(className) {\n    const OriginalClass = _global[className];\n    if (!OriginalClass)\n        return;\n    // keep original class in global\n    _global[zoneSymbol(className)] = OriginalClass;\n    _global[className] = function () {\n        const a = bindArguments(arguments, className);\n        switch (a.length) {\n            case 0:\n                this[originalInstanceKey] = new OriginalClass();\n                break;\n            case 1:\n                this[originalInstanceKey] = new OriginalClass(a[0]);\n                break;\n            case 2:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1]);\n                break;\n            case 3:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2]);\n                break;\n            case 4:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2], a[3]);\n                break;\n            default:\n                throw new Error('Arg list too long.');\n        }\n    };\n    // attach original delegate to patched function\n    attachOriginToPatched(_global[className], OriginalClass);\n    const instance = new OriginalClass(function () { });\n    let prop;\n    for (prop in instance) {\n        // https://bugs.webkit.org/show_bug.cgi?id=44721\n        if (className === 'XMLHttpRequest' && prop === 'responseBlob')\n            continue;\n        (function (prop) {\n            if (typeof instance[prop] === 'function') {\n                _global[className].prototype[prop] = function () {\n                    return this[originalInstanceKey][prop].apply(this[originalInstanceKey], arguments);\n                };\n            }\n            else {\n                ObjectDefineProperty(_global[className].prototype, prop, {\n                    set: function (fn) {\n                        if (typeof fn === 'function') {\n                            this[originalInstanceKey][prop] = wrapWithCurrentZone(fn, className + '.' + prop);\n                            // keep callback in wrapped function so we can\n                            // use it in Function.prototype.toString to return\n                            // the native one.\n                            attachOriginToPatched(this[originalInstanceKey][prop], fn);\n                        }\n                        else {\n                            this[originalInstanceKey][prop] = fn;\n                        }\n                    },\n                    get: function () {\n                        return this[originalInstanceKey][prop];\n                    }\n                });\n            }\n        }(prop));\n    }\n    for (prop in OriginalClass) {\n        if (prop !== 'prototype' && OriginalClass.hasOwnProperty(prop)) {\n            _global[className][prop] = OriginalClass[prop];\n        }\n    }\n}\nfunction patchMethod(target, name, patchFn) {\n    let proto = target;\n    while (proto && !proto.hasOwnProperty(name)) {\n        proto = ObjectGetPrototypeOf(proto);\n    }\n    if (!proto && target[name]) {\n        // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n        proto = target;\n    }\n    const delegateName = zoneSymbol(name);\n    let delegate = null;\n    if (proto && (!(delegate = proto[delegateName]) || !proto.hasOwnProperty(delegateName))) {\n        delegate = proto[delegateName] = proto[name];\n        // check whether proto[name] is writable\n        // some property is readonly in safari, such as HtmlCanvasElement.prototype.toBlob\n        const desc = proto && ObjectGetOwnPropertyDescriptor(proto, name);\n        if (isPropertyWritable(desc)) {\n            const patchDelegate = patchFn(delegate, delegateName, name);\n            proto[name] = function () {\n                return patchDelegate(this, arguments);\n            };\n            attachOriginToPatched(proto[name], delegate);\n        }\n    }\n    return delegate;\n}\n// TODO: @JiaLiPassion, support cancel task later if necessary\nfunction patchMacroTask(obj, funcName, metaCreator) {\n    let setNative = null;\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[data.cbIdx] = function () {\n            task.invoke.apply(this, arguments);\n        };\n        setNative.apply(data.target, data.args);\n        return task;\n    }\n    setNative = patchMethod(obj, funcName, (delegate) => function (self, args) {\n        const meta = metaCreator(self, args);\n        if (meta.cbIdx >= 0 && typeof args[meta.cbIdx] === 'function') {\n            return scheduleMacroTaskWithCurrentZone(meta.name, args[meta.cbIdx], meta, scheduleTask);\n        }\n        else {\n            // cause an error by calling it directly.\n            return delegate.apply(self, args);\n        }\n    });\n}\nfunction attachOriginToPatched(patched, original) {\n    patched[zoneSymbol('OriginalDelegate')] = original;\n}\nlet isDetectedIEOrEdge = false;\nlet ieOrEdge = false;\nfunction isIE() {\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1) {\n            return true;\n        }\n    }\n    catch (error) {\n    }\n    return false;\n}\nfunction isIEOrEdge() {\n    if (isDetectedIEOrEdge) {\n        return ieOrEdge;\n    }\n    isDetectedIEOrEdge = true;\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1 || ua.indexOf('Edge/') !== -1) {\n            ieOrEdge = true;\n        }\n    }\n    catch (error) {\n    }\n    return ieOrEdge;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nZone.__load_patch('ZoneAwarePromise', (global, Zone, api) => {\n    const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n    const ObjectDefineProperty = Object.defineProperty;\n    function readableObjectToString(obj) {\n        if (obj && obj.toString === Object.prototype.toString) {\n            const className = obj.constructor && obj.constructor.name;\n            return (className ? className : '') + ': ' + JSON.stringify(obj);\n        }\n        return obj ? obj.toString() : Object.prototype.toString.call(obj);\n    }\n    const __symbol__ = api.symbol;\n    const _uncaughtPromiseErrors = [];\n    const isDisableWrappingUncaughtPromiseRejection = global[__symbol__('DISABLE_WRAPPING_UNCAUGHT_PROMISE_REJECTION')] === true;\n    const symbolPromise = __symbol__('Promise');\n    const symbolThen = __symbol__('then');\n    const creationTrace = '__creationTrace__';\n    api.onUnhandledError = (e) => {\n        if (api.showUncaughtError()) {\n            const rejection = e && e.rejection;\n            if (rejection) {\n                console.error('Unhandled Promise rejection:', rejection instanceof Error ? rejection.message : rejection, '; Zone:', e.zone.name, '; Task:', e.task && e.task.source, '; Value:', rejection, rejection instanceof Error ? rejection.stack : undefined);\n            }\n            else {\n                console.error(e);\n            }\n        }\n    };\n    api.microtaskDrainDone = () => {\n        while (_uncaughtPromiseErrors.length) {\n            const uncaughtPromiseError = _uncaughtPromiseErrors.shift();\n            try {\n                uncaughtPromiseError.zone.runGuarded(() => {\n                    if (uncaughtPromiseError.throwOriginal) {\n                        throw uncaughtPromiseError.rejection;\n                    }\n                    throw uncaughtPromiseError;\n                });\n            }\n            catch (error) {\n                handleUnhandledRejection(error);\n            }\n        }\n    };\n    const UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL = __symbol__('unhandledPromiseRejectionHandler');\n    function handleUnhandledRejection(e) {\n        api.onUnhandledError(e);\n        try {\n            const handler = Zone[UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL];\n            if (typeof handler === 'function') {\n                handler.call(this, e);\n            }\n        }\n        catch (err) {\n        }\n    }\n    function isThenable(value) {\n        return value && value.then;\n    }\n    function forwardResolution(value) {\n        return value;\n    }\n    function forwardRejection(rejection) {\n        return ZoneAwarePromise.reject(rejection);\n    }\n    const symbolState = __symbol__('state');\n    const symbolValue = __symbol__('value');\n    const symbolFinally = __symbol__('finally');\n    const symbolParentPromiseValue = __symbol__('parentPromiseValue');\n    const symbolParentPromiseState = __symbol__('parentPromiseState');\n    const source = 'Promise.then';\n    const UNRESOLVED = null;\n    const RESOLVED = true;\n    const REJECTED = false;\n    const REJECTED_NO_CATCH = 0;\n    function makeResolver(promise, state) {\n        return (v) => {\n            try {\n                resolvePromise(promise, state, v);\n            }\n            catch (err) {\n                resolvePromise(promise, false, err);\n            }\n            // Do not return value or you will break the Promise spec.\n        };\n    }\n    const once = function () {\n        let wasCalled = false;\n        return function wrapper(wrappedFunction) {\n            return function () {\n                if (wasCalled) {\n                    return;\n                }\n                wasCalled = true;\n                wrappedFunction.apply(null, arguments);\n            };\n        };\n    };\n    const TYPE_ERROR = 'Promise resolved with itself';\n    const CURRENT_TASK_TRACE_SYMBOL = __symbol__('currentTaskTrace');\n    // Promise Resolution\n    function resolvePromise(promise, state, value) {\n        const onceWrapper = once();\n        if (promise === value) {\n            throw new TypeError(TYPE_ERROR);\n        }\n        if (promise[symbolState] === UNRESOLVED) {\n            // should only get value.then once based on promise spec.\n            let then = null;\n            try {\n                if (typeof value === 'object' || typeof value === 'function') {\n                    then = value && value.then;\n                }\n            }\n            catch (err) {\n                onceWrapper(() => {\n                    resolvePromise(promise, false, err);\n                })();\n                return promise;\n            }\n            // if (value instanceof ZoneAwarePromise) {\n            if (state !== REJECTED && value instanceof ZoneAwarePromise &&\n                value.hasOwnProperty(symbolState) && value.hasOwnProperty(symbolValue) &&\n                value[symbolState] !== UNRESOLVED) {\n                clearRejectedNoCatch(value);\n                resolvePromise(promise, value[symbolState], value[symbolValue]);\n            }\n            else if (state !== REJECTED && typeof then === 'function') {\n                try {\n                    then.call(value, onceWrapper(makeResolver(promise, state)), onceWrapper(makeResolver(promise, false)));\n                }\n                catch (err) {\n                    onceWrapper(() => {\n                        resolvePromise(promise, false, err);\n                    })();\n                }\n            }\n            else {\n                promise[symbolState] = state;\n                const queue = promise[symbolValue];\n                promise[symbolValue] = value;\n                if (promise[symbolFinally] === symbolFinally) {\n                    // the promise is generated by Promise.prototype.finally\n                    if (state === RESOLVED) {\n                        // the state is resolved, should ignore the value\n                        // and use parent promise value\n                        promise[symbolState] = promise[symbolParentPromiseState];\n                        promise[symbolValue] = promise[symbolParentPromiseValue];\n                    }\n                }\n                // record task information in value when error occurs, so we can\n                // do some additional work such as render longStackTrace\n                if (state === REJECTED && value instanceof Error) {\n                    // check if longStackTraceZone is here\n                    const trace = Zone.currentTask && Zone.currentTask.data &&\n                        Zone.currentTask.data[creationTrace];\n                    if (trace) {\n                        // only keep the long stack trace into error when in longStackTraceZone\n                        ObjectDefineProperty(value, CURRENT_TASK_TRACE_SYMBOL, { configurable: true, enumerable: false, writable: true, value: trace });\n                    }\n                }\n                for (let i = 0; i < queue.length;) {\n                    scheduleResolveOrReject(promise, queue[i++], queue[i++], queue[i++], queue[i++]);\n                }\n                if (queue.length == 0 && state == REJECTED) {\n                    promise[symbolState] = REJECTED_NO_CATCH;\n                    let uncaughtPromiseError = value;\n                    try {\n                        // Here we throws a new Error to print more readable error log\n                        // and if the value is not an error, zone.js builds an `Error`\n                        // Object here to attach the stack information.\n                        throw new Error('Uncaught (in promise): ' + readableObjectToString(value) +\n                            (value && value.stack ? '\\n' + value.stack : ''));\n                    }\n                    catch (err) {\n                        uncaughtPromiseError = err;\n                    }\n                    if (isDisableWrappingUncaughtPromiseRejection) {\n                        // If disable wrapping uncaught promise reject\n                        // use the value instead of wrapping it.\n                        uncaughtPromiseError.throwOriginal = true;\n                    }\n                    uncaughtPromiseError.rejection = value;\n                    uncaughtPromiseError.promise = promise;\n                    uncaughtPromiseError.zone = Zone.current;\n                    uncaughtPromiseError.task = Zone.currentTask;\n                    _uncaughtPromiseErrors.push(uncaughtPromiseError);\n                    api.scheduleMicroTask(); // to make sure that it is running\n                }\n            }\n        }\n        // Resolving an already resolved promise is a noop.\n        return promise;\n    }\n    const REJECTION_HANDLED_HANDLER = __symbol__('rejectionHandledHandler');\n    function clearRejectedNoCatch(promise) {\n        if (promise[symbolState] === REJECTED_NO_CATCH) {\n            // if the promise is rejected no catch status\n            // and queue.length > 0, means there is a error handler\n            // here to handle the rejected promise, we should trigger\n            // windows.rejectionhandled eventHandler or nodejs rejectionHandled\n            // eventHandler\n            try {\n                const handler = Zone[REJECTION_HANDLED_HANDLER];\n                if (handler && typeof handler === 'function') {\n                    handler.call(this, { rejection: promise[symbolValue], promise: promise });\n                }\n            }\n            catch (err) {\n            }\n            promise[symbolState] = REJECTED;\n            for (let i = 0; i < _uncaughtPromiseErrors.length; i++) {\n                if (promise === _uncaughtPromiseErrors[i].promise) {\n                    _uncaughtPromiseErrors.splice(i, 1);\n                }\n            }\n        }\n    }\n    function scheduleResolveOrReject(promise, zone, chainPromise, onFulfilled, onRejected) {\n        clearRejectedNoCatch(promise);\n        const promiseState = promise[symbolState];\n        const delegate = promiseState ?\n            (typeof onFulfilled === 'function') ? onFulfilled : forwardResolution :\n            (typeof onRejected === 'function') ? onRejected :\n                forwardRejection;\n        zone.scheduleMicroTask(source, () => {\n            try {\n                const parentPromiseValue = promise[symbolValue];\n                const isFinallyPromise = !!chainPromise && symbolFinally === chainPromise[symbolFinally];\n                if (isFinallyPromise) {\n                    // if the promise is generated from finally call, keep parent promise's state and value\n                    chainPromise[symbolParentPromiseValue] = parentPromiseValue;\n                    chainPromise[symbolParentPromiseState] = promiseState;\n                }\n                // should not pass value to finally callback\n                const value = zone.run(delegate, undefined, isFinallyPromise && delegate !== forwardRejection && delegate !== forwardResolution ?\n                    [] :\n                    [parentPromiseValue]);\n                resolvePromise(chainPromise, true, value);\n            }\n            catch (error) {\n                // if error occurs, should always return this error\n                resolvePromise(chainPromise, false, error);\n            }\n        }, chainPromise);\n    }\n    const ZONE_AWARE_PROMISE_TO_STRING = 'function ZoneAwarePromise() { [native code] }';\n    const noop = function () { };\n    const AggregateError = global.AggregateError;\n    class ZoneAwarePromise {\n        static toString() {\n            return ZONE_AWARE_PROMISE_TO_STRING;\n        }\n        static resolve(value) {\n            return resolvePromise(new this(null), RESOLVED, value);\n        }\n        static reject(error) {\n            return resolvePromise(new this(null), REJECTED, error);\n        }\n        static any(values) {\n            if (!values || typeof values[Symbol.iterator] !== 'function') {\n                return Promise.reject(new AggregateError([], 'All promises were rejected'));\n            }\n            const promises = [];\n            let count = 0;\n            try {\n                for (let v of values) {\n                    count++;\n                    promises.push(ZoneAwarePromise.resolve(v));\n                }\n            }\n            catch (err) {\n                return Promise.reject(new AggregateError([], 'All promises were rejected'));\n            }\n            if (count === 0) {\n                return Promise.reject(new AggregateError([], 'All promises were rejected'));\n            }\n            let finished = false;\n            const errors = [];\n            return new ZoneAwarePromise((resolve, reject) => {\n                for (let i = 0; i < promises.length; i++) {\n                    promises[i].then(v => {\n                        if (finished) {\n                            return;\n                        }\n                        finished = true;\n                        resolve(v);\n                    }, err => {\n                        errors.push(err);\n                        count--;\n                        if (count === 0) {\n                            finished = true;\n                            reject(new AggregateError(errors, 'All promises were rejected'));\n                        }\n                    });\n                }\n            });\n        }\n        ;\n        static race(values) {\n            let resolve;\n            let reject;\n            let promise = new this((res, rej) => {\n                resolve = res;\n                reject = rej;\n            });\n            function onResolve(value) {\n                resolve(value);\n            }\n            function onReject(error) {\n                reject(error);\n            }\n            for (let value of values) {\n                if (!isThenable(value)) {\n                    value = this.resolve(value);\n                }\n                value.then(onResolve, onReject);\n            }\n            return promise;\n        }\n        static all(values) {\n            return ZoneAwarePromise.allWithCallback(values);\n        }\n        static allSettled(values) {\n            const P = this && this.prototype instanceof ZoneAwarePromise ? this : ZoneAwarePromise;\n            return P.allWithCallback(values, {\n                thenCallback: (value) => ({ status: 'fulfilled', value }),\n                errorCallback: (err) => ({ status: 'rejected', reason: err })\n            });\n        }\n        static allWithCallback(values, callback) {\n            let resolve;\n            let reject;\n            let promise = new this((res, rej) => {\n                resolve = res;\n                reject = rej;\n            });\n            // Start at 2 to prevent prematurely resolving if .then is called immediately.\n            let unresolvedCount = 2;\n            let valueIndex = 0;\n            const resolvedValues = [];\n            for (let value of values) {\n                if (!isThenable(value)) {\n                    value = this.resolve(value);\n                }\n                const curValueIndex = valueIndex;\n                try {\n                    value.then((value) => {\n                        resolvedValues[curValueIndex] = callback ? callback.thenCallback(value) : value;\n                        unresolvedCount--;\n                        if (unresolvedCount === 0) {\n                            resolve(resolvedValues);\n                        }\n                    }, (err) => {\n                        if (!callback) {\n                            reject(err);\n                        }\n                        else {\n                            resolvedValues[curValueIndex] = callback.errorCallback(err);\n                            unresolvedCount--;\n                            if (unresolvedCount === 0) {\n                                resolve(resolvedValues);\n                            }\n                        }\n                    });\n                }\n                catch (thenErr) {\n                    reject(thenErr);\n                }\n                unresolvedCount++;\n                valueIndex++;\n            }\n            // Make the unresolvedCount zero-based again.\n            unresolvedCount -= 2;\n            if (unresolvedCount === 0) {\n                resolve(resolvedValues);\n            }\n            return promise;\n        }\n        constructor(executor) {\n            const promise = this;\n            if (!(promise instanceof ZoneAwarePromise)) {\n                throw new Error('Must be an instanceof Promise.');\n            }\n            promise[symbolState] = UNRESOLVED;\n            promise[symbolValue] = []; // queue;\n            try {\n                executor && executor(makeResolver(promise, RESOLVED), makeResolver(promise, REJECTED));\n            }\n            catch (error) {\n                resolvePromise(promise, false, error);\n            }\n        }\n        get [Symbol.toStringTag]() {\n            return 'Promise';\n        }\n        get [Symbol.species]() {\n            return ZoneAwarePromise;\n        }\n        then(onFulfilled, onRejected) {\n            let C = this.constructor[Symbol.species];\n            if (!C || typeof C !== 'function') {\n                C = this.constructor || ZoneAwarePromise;\n            }\n            const chainPromise = new C(noop);\n            const zone = Zone.current;\n            if (this[symbolState] == UNRESOLVED) {\n                this[symbolValue].push(zone, chainPromise, onFulfilled, onRejected);\n            }\n            else {\n                scheduleResolveOrReject(this, zone, chainPromise, onFulfilled, onRejected);\n            }\n            return chainPromise;\n        }\n        catch(onRejected) {\n            return this.then(null, onRejected);\n        }\n        finally(onFinally) {\n            let C = this.constructor[Symbol.species];\n            if (!C || typeof C !== 'function') {\n                C = ZoneAwarePromise;\n            }\n            const chainPromise = new C(noop);\n            chainPromise[symbolFinally] = symbolFinally;\n            const zone = Zone.current;\n            if (this[symbolState] == UNRESOLVED) {\n                this[symbolValue].push(zone, chainPromise, onFinally, onFinally);\n            }\n            else {\n                scheduleResolveOrReject(this, zone, chainPromise, onFinally, onFinally);\n            }\n            return chainPromise;\n        }\n    }\n    // Protect against aggressive optimizers dropping seemingly unused properties.\n    // E.g. Closure Compiler in advanced mode.\n    ZoneAwarePromise['resolve'] = ZoneAwarePromise.resolve;\n    ZoneAwarePromise['reject'] = ZoneAwarePromise.reject;\n    ZoneAwarePromise['race'] = ZoneAwarePromise.race;\n    ZoneAwarePromise['all'] = ZoneAwarePromise.all;\n    const NativePromise = global[symbolPromise] = global['Promise'];\n    global['Promise'] = ZoneAwarePromise;\n    const symbolThenPatched = __symbol__('thenPatched');\n    function patchThen(Ctor) {\n        const proto = Ctor.prototype;\n        const prop = ObjectGetOwnPropertyDescriptor(proto, 'then');\n        if (prop && (prop.writable === false || !prop.configurable)) {\n            // check Ctor.prototype.then propertyDescriptor is writable or not\n            // in meteor env, writable is false, we should ignore such case\n            return;\n        }\n        const originalThen = proto.then;\n        // Keep a reference to the original method.\n        proto[symbolThen] = originalThen;\n        Ctor.prototype.then = function (onResolve, onReject) {\n            const wrapped = new ZoneAwarePromise((resolve, reject) => {\n                originalThen.call(this, resolve, reject);\n            });\n            return wrapped.then(onResolve, onReject);\n        };\n        Ctor[symbolThenPatched] = true;\n    }\n    api.patchThen = patchThen;\n    function zoneify(fn) {\n        return function (self, args) {\n            let resultPromise = fn.apply(self, args);\n            if (resultPromise instanceof ZoneAwarePromise) {\n                return resultPromise;\n            }\n            let ctor = resultPromise.constructor;\n            if (!ctor[symbolThenPatched]) {\n                patchThen(ctor);\n            }\n            return resultPromise;\n        };\n    }\n    if (NativePromise) {\n        patchThen(NativePromise);\n        patchMethod(global, 'fetch', delegate => zoneify(delegate));\n    }\n    // This is not part of public API, but it is useful for tests, so we expose it.\n    Promise[Zone.__symbol__('uncaughtPromiseErrors')] = _uncaughtPromiseErrors;\n    return ZoneAwarePromise;\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// override Function.prototype.toString to make zone.js patched function\n// look like native function\nZone.__load_patch('toString', (global) => {\n    // patch Func.prototype.toString to let them look like native\n    const originalFunctionToString = Function.prototype.toString;\n    const ORIGINAL_DELEGATE_SYMBOL = zoneSymbol('OriginalDelegate');\n    const PROMISE_SYMBOL = zoneSymbol('Promise');\n    const ERROR_SYMBOL = zoneSymbol('Error');\n    const newFunctionToString = function toString() {\n        if (typeof this === 'function') {\n            const originalDelegate = this[ORIGINAL_DELEGATE_SYMBOL];\n            if (originalDelegate) {\n                if (typeof originalDelegate === 'function') {\n                    return originalFunctionToString.call(originalDelegate);\n                }\n                else {\n                    return Object.prototype.toString.call(originalDelegate);\n                }\n            }\n            if (this === Promise) {\n                const nativePromise = global[PROMISE_SYMBOL];\n                if (nativePromise) {\n                    return originalFunctionToString.call(nativePromise);\n                }\n            }\n            if (this === Error) {\n                const nativeError = global[ERROR_SYMBOL];\n                if (nativeError) {\n                    return originalFunctionToString.call(nativeError);\n                }\n            }\n        }\n        return originalFunctionToString.call(this);\n    };\n    newFunctionToString[ORIGINAL_DELEGATE_SYMBOL] = originalFunctionToString;\n    Function.prototype.toString = newFunctionToString;\n    // patch Object.prototype.toString to let them look like native\n    const originalObjectToString = Object.prototype.toString;\n    const PROMISE_OBJECT_TO_STRING = '[object Promise]';\n    Object.prototype.toString = function () {\n        if (typeof Promise === 'function' && this instanceof Promise) {\n            return PROMISE_OBJECT_TO_STRING;\n        }\n        return originalObjectToString.call(this);\n    };\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet passiveSupported = false;\nif (typeof window !== 'undefined') {\n    try {\n        const options = Object.defineProperty({}, 'passive', {\n            get: function () {\n                passiveSupported = true;\n            }\n        });\n        // Note: We pass the `options` object as the event handler too. This is not compatible with the\n        // signature of `addEventListener` or `removeEventListener` but enables us to remove the handler\n        // without an actual handler.\n        window.addEventListener('test', options, options);\n        window.removeEventListener('test', options, options);\n    }\n    catch (err) {\n        passiveSupported = false;\n    }\n}\n// an identifier to tell ZoneTask do not create a new invoke closure\nconst OPTIMIZED_ZONE_EVENT_TASK_DATA = {\n    useG: true\n};\nconst zoneSymbolEventNames = {};\nconst globalSources = {};\nconst EVENT_NAME_SYMBOL_REGX = new RegExp('^' + ZONE_SYMBOL_PREFIX + '(\\\\w+)(true|false)$');\nconst IMMEDIATE_PROPAGATION_SYMBOL = zoneSymbol('propagationStopped');\nfunction prepareEventNames(eventName, eventNameToString) {\n    const falseEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + FALSE_STR;\n    const trueEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + TRUE_STR;\n    const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n    const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n    zoneSymbolEventNames[eventName] = {};\n    zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n    zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n}\nfunction patchEventTarget(_global, api, apis, patchOptions) {\n    const ADD_EVENT_LISTENER = (patchOptions && patchOptions.add) || ADD_EVENT_LISTENER_STR;\n    const REMOVE_EVENT_LISTENER = (patchOptions && patchOptions.rm) || REMOVE_EVENT_LISTENER_STR;\n    const LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.listeners) || 'eventListeners';\n    const REMOVE_ALL_LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.rmAll) || 'removeAllListeners';\n    const zoneSymbolAddEventListener = zoneSymbol(ADD_EVENT_LISTENER);\n    const ADD_EVENT_LISTENER_SOURCE = '.' + ADD_EVENT_LISTENER + ':';\n    const PREPEND_EVENT_LISTENER = 'prependListener';\n    const PREPEND_EVENT_LISTENER_SOURCE = '.' + PREPEND_EVENT_LISTENER + ':';\n    const invokeTask = function (task, target, event) {\n        // for better performance, check isRemoved which is set\n        // by removeEventListener\n        if (task.isRemoved) {\n            return;\n        }\n        const delegate = task.callback;\n        if (typeof delegate === 'object' && delegate.handleEvent) {\n            // create the bind version of handleEvent when invoke\n            task.callback = (event) => delegate.handleEvent(event);\n            task.originalDelegate = delegate;\n        }\n        // invoke static task.invoke\n        // need to try/catch error here, otherwise, the error in one event listener\n        // will break the executions of the other event listeners. Also error will\n        // not remove the event listener when `once` options is true.\n        let error;\n        try {\n            task.invoke(task, target, [event]);\n        }\n        catch (err) {\n            error = err;\n        }\n        const options = task.options;\n        if (options && typeof options === 'object' && options.once) {\n            // if options.once is true, after invoke once remove listener here\n            // only browser need to do this, nodejs eventEmitter will cal removeListener\n            // inside EventEmitter.once\n            const delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n            target[REMOVE_EVENT_LISTENER].call(target, event.type, delegate, options);\n        }\n        return error;\n    };\n    function globalCallback(context, event, isCapture) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        // event.target is needed for Samsung TV and SourceBuffer\n        // || global is needed https://github.com/angular/zone.js/issues/190\n        const target = context || event.target || _global;\n        const tasks = target[zoneSymbolEventNames[event.type][isCapture ? TRUE_STR : FALSE_STR]];\n        if (tasks) {\n            const errors = [];\n            // invoke all tasks which attached to current target with given event.type and capture = false\n            // for performance concern, if task.length === 1, just invoke\n            if (tasks.length === 1) {\n                const err = invokeTask(tasks[0], target, event);\n                err && errors.push(err);\n            }\n            else {\n                // https://github.com/angular/zone.js/issues/836\n                // copy the tasks array before invoke, to avoid\n                // the callback will remove itself or other listener\n                const copyTasks = tasks.slice();\n                for (let i = 0; i < copyTasks.length; i++) {\n                    if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                        break;\n                    }\n                    const err = invokeTask(copyTasks[i], target, event);\n                    err && errors.push(err);\n                }\n            }\n            // Since there is only one error, we don't need to schedule microTask\n            // to throw the error.\n            if (errors.length === 1) {\n                throw errors[0];\n            }\n            else {\n                for (let i = 0; i < errors.length; i++) {\n                    const err = errors[i];\n                    api.nativeScheduleMicroTask(() => {\n                        throw err;\n                    });\n                }\n            }\n        }\n    }\n    // global shared zoneAwareCallback to handle all event callback with capture = false\n    const globalZoneAwareCallback = function (event) {\n        return globalCallback(this, event, false);\n    };\n    // global shared zoneAwareCallback to handle all event callback with capture = true\n    const globalZoneAwareCaptureCallback = function (event) {\n        return globalCallback(this, event, true);\n    };\n    function patchEventTargetMethods(obj, patchOptions) {\n        if (!obj) {\n            return false;\n        }\n        let useGlobalCallback = true;\n        if (patchOptions && patchOptions.useG !== undefined) {\n            useGlobalCallback = patchOptions.useG;\n        }\n        const validateHandler = patchOptions && patchOptions.vh;\n        let checkDuplicate = true;\n        if (patchOptions && patchOptions.chkDup !== undefined) {\n            checkDuplicate = patchOptions.chkDup;\n        }\n        let returnTarget = false;\n        if (patchOptions && patchOptions.rt !== undefined) {\n            returnTarget = patchOptions.rt;\n        }\n        let proto = obj;\n        while (proto && !proto.hasOwnProperty(ADD_EVENT_LISTENER)) {\n            proto = ObjectGetPrototypeOf(proto);\n        }\n        if (!proto && obj[ADD_EVENT_LISTENER]) {\n            // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n            proto = obj;\n        }\n        if (!proto) {\n            return false;\n        }\n        if (proto[zoneSymbolAddEventListener]) {\n            return false;\n        }\n        const eventNameToString = patchOptions && patchOptions.eventNameToString;\n        // a shared global taskData to pass data for scheduleEventTask\n        // so we do not need to create a new object just for pass some data\n        const taskData = {};\n        const nativeAddEventListener = proto[zoneSymbolAddEventListener] = proto[ADD_EVENT_LISTENER];\n        const nativeRemoveEventListener = proto[zoneSymbol(REMOVE_EVENT_LISTENER)] =\n            proto[REMOVE_EVENT_LISTENER];\n        const nativeListeners = proto[zoneSymbol(LISTENERS_EVENT_LISTENER)] =\n            proto[LISTENERS_EVENT_LISTENER];\n        const nativeRemoveAllListeners = proto[zoneSymbol(REMOVE_ALL_LISTENERS_EVENT_LISTENER)] =\n            proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER];\n        let nativePrependEventListener;\n        if (patchOptions && patchOptions.prepend) {\n            nativePrependEventListener = proto[zoneSymbol(patchOptions.prepend)] =\n                proto[patchOptions.prepend];\n        }\n        /**\n         * This util function will build an option object with passive option\n         * to handle all possible input from the user.\n         */\n        function buildEventListenerOptions(options, passive) {\n            if (!passiveSupported && typeof options === 'object' && options) {\n                // doesn't support passive but user want to pass an object as options.\n                // this will not work on some old browser, so we just pass a boolean\n                // as useCapture parameter\n                return !!options.capture;\n            }\n            if (!passiveSupported || !passive) {\n                return options;\n            }\n            if (typeof options === 'boolean') {\n                return { capture: options, passive: true };\n            }\n            if (!options) {\n                return { passive: true };\n            }\n            if (typeof options === 'object' && options.passive !== false) {\n                return Object.assign(Object.assign({}, options), { passive: true });\n            }\n            return options;\n        }\n        const customScheduleGlobal = function (task) {\n            // if there is already a task for the eventName + capture,\n            // just return, because we use the shared globalZoneAwareCallback here.\n            if (taskData.isExisting) {\n                return;\n            }\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, taskData.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, taskData.options);\n        };\n        const customCancelGlobal = function (task) {\n            // if task is not marked as isRemoved, this call is directly\n            // from Zone.prototype.cancelTask, we should remove the task\n            // from tasksList of target first\n            if (!task.isRemoved) {\n                const symbolEventNames = zoneSymbolEventNames[task.eventName];\n                let symbolEventName;\n                if (symbolEventNames) {\n                    symbolEventName = symbolEventNames[task.capture ? TRUE_STR : FALSE_STR];\n                }\n                const existingTasks = symbolEventName && task.target[symbolEventName];\n                if (existingTasks) {\n                    for (let i = 0; i < existingTasks.length; i++) {\n                        const existingTask = existingTasks[i];\n                        if (existingTask === task) {\n                            existingTasks.splice(i, 1);\n                            // set isRemoved to data for faster invokeTask check\n                            task.isRemoved = true;\n                            if (existingTasks.length === 0) {\n                                // all tasks for the eventName + capture have gone,\n                                // remove globalZoneAwareCallback and remove the task cache from target\n                                task.allRemoved = true;\n                                task.target[symbolEventName] = null;\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n            // if all tasks for the eventName + capture have gone,\n            // we will really remove the global event callback,\n            // if not, return\n            if (!task.allRemoved) {\n                return;\n            }\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, task.options);\n        };\n        const customScheduleNonGlobal = function (task) {\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customSchedulePrepend = function (task) {\n            return nativePrependEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customCancelNonGlobal = function (task) {\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.invoke, task.options);\n        };\n        const customSchedule = useGlobalCallback ? customScheduleGlobal : customScheduleNonGlobal;\n        const customCancel = useGlobalCallback ? customCancelGlobal : customCancelNonGlobal;\n        const compareTaskCallbackVsDelegate = function (task, delegate) {\n            const typeOfDelegate = typeof delegate;\n            return (typeOfDelegate === 'function' && task.callback === delegate) ||\n                (typeOfDelegate === 'object' && task.originalDelegate === delegate);\n        };\n        const compare = (patchOptions && patchOptions.diff) ? patchOptions.diff : compareTaskCallbackVsDelegate;\n        const unpatchedEvents = Zone[zoneSymbol('UNPATCHED_EVENTS')];\n        const passiveEvents = _global[zoneSymbol('PASSIVE_EVENTS')];\n        const makeAddListener = function (nativeListener, addSource, customScheduleFn, customCancelFn, returnTarget = false, prepend = false) {\n            return function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                let delegate = arguments[1];\n                if (!delegate) {\n                    return nativeListener.apply(this, arguments);\n                }\n                if (isNode && eventName === 'uncaughtException') {\n                    // don't patch uncaughtException of nodejs to prevent endless loop\n                    return nativeListener.apply(this, arguments);\n                }\n                // don't create the bind delegate function for handleEvent\n                // case here to improve addEventListener performance\n                // we will create the bind delegate when invoke\n                let isHandleEvent = false;\n                if (typeof delegate !== 'function') {\n                    if (!delegate.handleEvent) {\n                        return nativeListener.apply(this, arguments);\n                    }\n                    isHandleEvent = true;\n                }\n                if (validateHandler && !validateHandler(nativeListener, delegate, target, arguments)) {\n                    return;\n                }\n                const passive = passiveSupported && !!passiveEvents && passiveEvents.indexOf(eventName) !== -1;\n                const options = buildEventListenerOptions(arguments[2], passive);\n                if (unpatchedEvents) {\n                    // check upatched list\n                    for (let i = 0; i < unpatchedEvents.length; i++) {\n                        if (eventName === unpatchedEvents[i]) {\n                            if (passive) {\n                                return nativeListener.call(target, eventName, delegate, options);\n                            }\n                            else {\n                                return nativeListener.apply(this, arguments);\n                            }\n                        }\n                    }\n                }\n                const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n                const once = options && typeof options === 'object' ? options.once : false;\n                const zone = Zone.current;\n                let symbolEventNames = zoneSymbolEventNames[eventName];\n                if (!symbolEventNames) {\n                    prepareEventNames(eventName, eventNameToString);\n                    symbolEventNames = zoneSymbolEventNames[eventName];\n                }\n                const symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n                let existingTasks = target[symbolEventName];\n                let isExisting = false;\n                if (existingTasks) {\n                    // already have task registered\n                    isExisting = true;\n                    if (checkDuplicate) {\n                        for (let i = 0; i < existingTasks.length; i++) {\n                            if (compare(existingTasks[i], delegate)) {\n                                // same callback, same capture, same event name, just return\n                                return;\n                            }\n                        }\n                    }\n                }\n                else {\n                    existingTasks = target[symbolEventName] = [];\n                }\n                let source;\n                const constructorName = target.constructor['name'];\n                const targetSource = globalSources[constructorName];\n                if (targetSource) {\n                    source = targetSource[eventName];\n                }\n                if (!source) {\n                    source = constructorName + addSource +\n                        (eventNameToString ? eventNameToString(eventName) : eventName);\n                }\n                // do not create a new object as task.data to pass those things\n                // just use the global shared one\n                taskData.options = options;\n                if (once) {\n                    // if addEventListener with once options, we don't pass it to\n                    // native addEventListener, instead we keep the once setting\n                    // and handle ourselves.\n                    taskData.options.once = false;\n                }\n                taskData.target = target;\n                taskData.capture = capture;\n                taskData.eventName = eventName;\n                taskData.isExisting = isExisting;\n                const data = useGlobalCallback ? OPTIMIZED_ZONE_EVENT_TASK_DATA : undefined;\n                // keep taskData into data to allow onScheduleEventTask to access the task information\n                if (data) {\n                    data.taskData = taskData;\n                }\n                const task = zone.scheduleEventTask(source, delegate, data, customScheduleFn, customCancelFn);\n                // should clear taskData.target to avoid memory leak\n                // issue, https://github.com/angular/angular/issues/20442\n                taskData.target = null;\n                // need to clear up taskData because it is a global object\n                if (data) {\n                    data.taskData = null;\n                }\n                // have to save those information to task in case\n                // application may call task.zone.cancelTask() directly\n                if (once) {\n                    options.once = true;\n                }\n                if (!(!passiveSupported && typeof task.options === 'boolean')) {\n                    // if not support passive, and we pass an option object\n                    // to addEventListener, we should save the options to task\n                    task.options = options;\n                }\n                task.target = target;\n                task.capture = capture;\n                task.eventName = eventName;\n                if (isHandleEvent) {\n                    // save original delegate for compare to check duplicate\n                    task.originalDelegate = delegate;\n                }\n                if (!prepend) {\n                    existingTasks.push(task);\n                }\n                else {\n                    existingTasks.unshift(task);\n                }\n                if (returnTarget) {\n                    return target;\n                }\n            };\n        };\n        proto[ADD_EVENT_LISTENER] = makeAddListener(nativeAddEventListener, ADD_EVENT_LISTENER_SOURCE, customSchedule, customCancel, returnTarget);\n        if (nativePrependEventListener) {\n            proto[PREPEND_EVENT_LISTENER] = makeAddListener(nativePrependEventListener, PREPEND_EVENT_LISTENER_SOURCE, customSchedulePrepend, customCancel, returnTarget, true);\n        }\n        proto[REMOVE_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const options = arguments[2];\n            const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n            const delegate = arguments[1];\n            if (!delegate) {\n                return nativeRemoveEventListener.apply(this, arguments);\n            }\n            if (validateHandler &&\n                !validateHandler(nativeRemoveEventListener, delegate, target, arguments)) {\n                return;\n            }\n            const symbolEventNames = zoneSymbolEventNames[eventName];\n            let symbolEventName;\n            if (symbolEventNames) {\n                symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n            }\n            const existingTasks = symbolEventName && target[symbolEventName];\n            if (existingTasks) {\n                for (let i = 0; i < existingTasks.length; i++) {\n                    const existingTask = existingTasks[i];\n                    if (compare(existingTask, delegate)) {\n                        existingTasks.splice(i, 1);\n                        // set isRemoved to data for faster invokeTask check\n                        existingTask.isRemoved = true;\n                        if (existingTasks.length === 0) {\n                            // all tasks for the eventName + capture have gone,\n                            // remove globalZoneAwareCallback and remove the task cache from target\n                            existingTask.allRemoved = true;\n                            target[symbolEventName] = null;\n                            // in the target, we have an event listener which is added by on_property\n                            // such as target.onclick = function() {}, so we need to clear this internal\n                            // property too if all delegates all removed\n                            if (typeof eventName === 'string') {\n                                const onPropertySymbol = ZONE_SYMBOL_PREFIX + 'ON_PROPERTY' + eventName;\n                                target[onPropertySymbol] = null;\n                            }\n                        }\n                        existingTask.zone.cancelTask(existingTask);\n                        if (returnTarget) {\n                            return target;\n                        }\n                        return;\n                    }\n                }\n            }\n            // issue 930, didn't find the event name or callback\n            // from zone kept existingTasks, the callback maybe\n            // added outside of zone, we need to call native removeEventListener\n            // to try to remove it.\n            return nativeRemoveEventListener.apply(this, arguments);\n        };\n        proto[LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const listeners = [];\n            const tasks = findEventTasks(target, eventNameToString ? eventNameToString(eventName) : eventName);\n            for (let i = 0; i < tasks.length; i++) {\n                const task = tasks[i];\n                let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                listeners.push(delegate);\n            }\n            return listeners;\n        };\n        proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (!eventName) {\n                const keys = Object.keys(target);\n                for (let i = 0; i < keys.length; i++) {\n                    const prop = keys[i];\n                    const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n                    let evtName = match && match[1];\n                    // in nodejs EventEmitter, removeListener event is\n                    // used for monitoring the removeListener call,\n                    // so just keep removeListener eventListener until\n                    // all other eventListeners are removed\n                    if (evtName && evtName !== 'removeListener') {\n                        this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, evtName);\n                    }\n                }\n                // remove removeListener listener finally\n                this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, 'removeListener');\n            }\n            else {\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                const symbolEventNames = zoneSymbolEventNames[eventName];\n                if (symbolEventNames) {\n                    const symbolEventName = symbolEventNames[FALSE_STR];\n                    const symbolCaptureEventName = symbolEventNames[TRUE_STR];\n                    const tasks = target[symbolEventName];\n                    const captureTasks = target[symbolCaptureEventName];\n                    if (tasks) {\n                        const removeTasks = tasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                    if (captureTasks) {\n                        const removeTasks = captureTasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                }\n            }\n            if (returnTarget) {\n                return this;\n            }\n        };\n        // for native toString patch\n        attachOriginToPatched(proto[ADD_EVENT_LISTENER], nativeAddEventListener);\n        attachOriginToPatched(proto[REMOVE_EVENT_LISTENER], nativeRemoveEventListener);\n        if (nativeRemoveAllListeners) {\n            attachOriginToPatched(proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER], nativeRemoveAllListeners);\n        }\n        if (nativeListeners) {\n            attachOriginToPatched(proto[LISTENERS_EVENT_LISTENER], nativeListeners);\n        }\n        return true;\n    }\n    let results = [];\n    for (let i = 0; i < apis.length; i++) {\n        results[i] = patchEventTargetMethods(apis[i], patchOptions);\n    }\n    return results;\n}\nfunction findEventTasks(target, eventName) {\n    if (!eventName) {\n        const foundTasks = [];\n        for (let prop in target) {\n            const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n            let evtName = match && match[1];\n            if (evtName && (!eventName || evtName === eventName)) {\n                const tasks = target[prop];\n                if (tasks) {\n                    for (let i = 0; i < tasks.length; i++) {\n                        foundTasks.push(tasks[i]);\n                    }\n                }\n            }\n        }\n        return foundTasks;\n    }\n    let symbolEventName = zoneSymbolEventNames[eventName];\n    if (!symbolEventName) {\n        prepareEventNames(eventName);\n        symbolEventName = zoneSymbolEventNames[eventName];\n    }\n    const captureFalseTasks = target[symbolEventName[FALSE_STR]];\n    const captureTrueTasks = target[symbolEventName[TRUE_STR]];\n    if (!captureFalseTasks) {\n        return captureTrueTasks ? captureTrueTasks.slice() : [];\n    }\n    else {\n        return captureTrueTasks ? captureFalseTasks.concat(captureTrueTasks) :\n            captureFalseTasks.slice();\n    }\n}\nfunction patchEventPrototype(global, api) {\n    const Event = global['Event'];\n    if (Event && Event.prototype) {\n        api.patchMethod(Event.prototype, 'stopImmediatePropagation', (delegate) => function (self, args) {\n            self[IMMEDIATE_PROPAGATION_SYMBOL] = true;\n            // we need to call the native stopImmediatePropagation\n            // in case in some hybrid application, some part of\n            // application will be controlled by zone, some are not\n            delegate && delegate.apply(self, args);\n        });\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction patchCallbacks(api, target, targetName, method, callbacks) {\n    const symbol = Zone.__symbol__(method);\n    if (target[symbol]) {\n        return;\n    }\n    const nativeDelegate = target[symbol] = target[method];\n    target[method] = function (name, opts, options) {\n        if (opts && opts.prototype) {\n            callbacks.forEach(function (callback) {\n                const source = `${targetName}.${method}::` + callback;\n                const prototype = opts.prototype;\n                if (prototype.hasOwnProperty(callback)) {\n                    const descriptor = api.ObjectGetOwnPropertyDescriptor(prototype, callback);\n                    if (descriptor && descriptor.value) {\n                        descriptor.value = api.wrapWithCurrentZone(descriptor.value, source);\n                        api._redefineProperty(opts.prototype, callback, descriptor);\n                    }\n                    else if (prototype[callback]) {\n                        prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                    }\n                }\n                else if (prototype[callback]) {\n                    prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                }\n            });\n        }\n        return nativeDelegate.call(target, name, opts, options);\n    };\n    api.attachOriginToPatched(target[method], nativeDelegate);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction filterProperties(target, onProperties, ignoreProperties) {\n    if (!ignoreProperties || ignoreProperties.length === 0) {\n        return onProperties;\n    }\n    const tip = ignoreProperties.filter(ip => ip.target === target);\n    if (!tip || tip.length === 0) {\n        return onProperties;\n    }\n    const targetIgnoreProperties = tip[0].ignoreProperties;\n    return onProperties.filter(op => targetIgnoreProperties.indexOf(op) === -1);\n}\nfunction patchFilteredProperties(target, onProperties, ignoreProperties, prototype) {\n    // check whether target is available, sometimes target will be undefined\n    // because different browser or some 3rd party plugin.\n    if (!target) {\n        return;\n    }\n    const filteredProperties = filterProperties(target, onProperties, ignoreProperties);\n    patchOnProperties(target, filteredProperties, prototype);\n}\n/**\n * Get all event name properties which the event name startsWith `on`\n * from the target object itself, inherited properties are not considered.\n */\nfunction getOnEventNames(target) {\n    return Object.getOwnPropertyNames(target)\n        .filter(name => name.startsWith('on') && name.length > 2)\n        .map(name => name.substring(2));\n}\nfunction propertyDescriptorPatch(api, _global) {\n    if (isNode && !isMix) {\n        return;\n    }\n    if (Zone[api.symbol('patchEvents')]) {\n        // events are already been patched by legacy patch.\n        return;\n    }\n    const ignoreProperties = _global['__Zone_ignore_on_properties'];\n    // for browsers that we can patch the descriptor:  Chrome & Firefox\n    let patchTargets = [];\n    if (isBrowser) {\n        const internalWindow = window;\n        patchTargets = patchTargets.concat([\n            'Document', 'SVGElement', 'Element', 'HTMLElement', 'HTMLBodyElement', 'HTMLMediaElement',\n            'HTMLFrameSetElement', 'HTMLFrameElement', 'HTMLIFrameElement', 'HTMLMarqueeElement', 'Worker'\n        ]);\n        const ignoreErrorProperties = isIE() ? [{ target: internalWindow, ignoreProperties: ['error'] }] : [];\n        // in IE/Edge, onProp not exist in window object, but in WindowPrototype\n        // so we need to pass WindowPrototype to check onProp exist or not\n        patchFilteredProperties(internalWindow, getOnEventNames(internalWindow), ignoreProperties ? ignoreProperties.concat(ignoreErrorProperties) : ignoreProperties, ObjectGetPrototypeOf(internalWindow));\n    }\n    patchTargets = patchTargets.concat([\n        'XMLHttpRequest', 'XMLHttpRequestEventTarget', 'IDBIndex', 'IDBRequest', 'IDBOpenDBRequest',\n        'IDBDatabase', 'IDBTransaction', 'IDBCursor', 'WebSocket'\n    ]);\n    for (let i = 0; i < patchTargets.length; i++) {\n        const target = _global[patchTargets[i]];\n        target && target.prototype &&\n            patchFilteredProperties(target.prototype, getOnEventNames(target.prototype), ignoreProperties);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nZone.__load_patch('util', (global, Zone, api) => {\n    // Collect native event names by looking at properties\n    // on the global namespace, e.g. 'onclick'.\n    const eventNames = getOnEventNames(global);\n    api.patchOnProperties = patchOnProperties;\n    api.patchMethod = patchMethod;\n    api.bindArguments = bindArguments;\n    api.patchMacroTask = patchMacroTask;\n    // In earlier version of zone.js (<0.9.0), we use env name `__zone_symbol__BLACK_LISTED_EVENTS` to\n    // define which events will not be patched by `Zone.js`.\n    // In newer version (>=0.9.0), we change the env name to `__zone_symbol__UNPATCHED_EVENTS` to keep\n    // the name consistent with angular repo.\n    // The  `__zone_symbol__BLACK_LISTED_EVENTS` is deprecated, but it is still be supported for\n    // backwards compatibility.\n    const SYMBOL_BLACK_LISTED_EVENTS = Zone.__symbol__('BLACK_LISTED_EVENTS');\n    const SYMBOL_UNPATCHED_EVENTS = Zone.__symbol__('UNPATCHED_EVENTS');\n    if (global[SYMBOL_UNPATCHED_EVENTS]) {\n        global[SYMBOL_BLACK_LISTED_EVENTS] = global[SYMBOL_UNPATCHED_EVENTS];\n    }\n    if (global[SYMBOL_BLACK_LISTED_EVENTS]) {\n        Zone[SYMBOL_BLACK_LISTED_EVENTS] = Zone[SYMBOL_UNPATCHED_EVENTS] =\n            global[SYMBOL_BLACK_LISTED_EVENTS];\n    }\n    api.patchEventPrototype = patchEventPrototype;\n    api.patchEventTarget = patchEventTarget;\n    api.isIEOrEdge = isIEOrEdge;\n    api.ObjectDefineProperty = ObjectDefineProperty;\n    api.ObjectGetOwnPropertyDescriptor = ObjectGetOwnPropertyDescriptor;\n    api.ObjectCreate = ObjectCreate;\n    api.ArraySlice = ArraySlice;\n    api.patchClass = patchClass;\n    api.wrapWithCurrentZone = wrapWithCurrentZone;\n    api.filterProperties = filterProperties;\n    api.attachOriginToPatched = attachOriginToPatched;\n    api._redefineProperty = Object.defineProperty;\n    api.patchCallbacks = patchCallbacks;\n    api.getGlobalObjects = () => ({\n        globalSources,\n        zoneSymbolEventNames,\n        eventNames,\n        isBrowser,\n        isMix,\n        isNode,\n        TRUE_STR,\n        FALSE_STR,\n        ZONE_SYMBOL_PREFIX,\n        ADD_EVENT_LISTENER_STR,\n        REMOVE_EVENT_LISTENER_STR\n    });\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst taskSymbol = zoneSymbol('zoneTask');\nfunction patchTimer(window, setName, cancelName, nameSuffix) {\n    let setNative = null;\n    let clearNative = null;\n    setName += nameSuffix;\n    cancelName += nameSuffix;\n    const tasksByHandleId = {};\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[0] = function () {\n            return task.invoke.apply(this, arguments);\n        };\n        data.handleId = setNative.apply(window, data.args);\n        return task;\n    }\n    function clearTask(task) {\n        return clearNative.call(window, task.data.handleId);\n    }\n    setNative =\n        patchMethod(window, setName, (delegate) => function (self, args) {\n            if (typeof args[0] === 'function') {\n                const options = {\n                    isPeriodic: nameSuffix === 'Interval',\n                    delay: (nameSuffix === 'Timeout' || nameSuffix === 'Interval') ? args[1] || 0 :\n                        undefined,\n                    args: args\n                };\n                const callback = args[0];\n                args[0] = function timer() {\n                    try {\n                        return callback.apply(this, arguments);\n                    }\n                    finally {\n                        // issue-934, task will be cancelled\n                        // even it is a periodic task such as\n                        // setInterval\n                        // https://github.com/angular/angular/issues/40387\n                        // Cleanup tasksByHandleId should be handled before scheduleTask\n                        // Since some zoneSpec may intercept and doesn't trigger\n                        // scheduleFn(scheduleTask) provided here.\n                        if (!(options.isPeriodic)) {\n                            if (typeof options.handleId === 'number') {\n                                // in non-nodejs env, we remove timerId\n                                // from local cache\n                                delete tasksByHandleId[options.handleId];\n                            }\n                            else if (options.handleId) {\n                                // Node returns complex objects as handleIds\n                                // we remove task reference from timer object\n                                options.handleId[taskSymbol] = null;\n                            }\n                        }\n                    }\n                };\n                const task = scheduleMacroTaskWithCurrentZone(setName, args[0], options, scheduleTask, clearTask);\n                if (!task) {\n                    return task;\n                }\n                // Node.js must additionally support the ref and unref functions.\n                const handle = task.data.handleId;\n                if (typeof handle === 'number') {\n                    // for non nodejs env, we save handleId: task\n                    // mapping in local cache for clearTimeout\n                    tasksByHandleId[handle] = task;\n                }\n                else if (handle) {\n                    // for nodejs env, we save task\n                    // reference in timerId Object for clearTimeout\n                    handle[taskSymbol] = task;\n                }\n                // check whether handle is null, because some polyfill or browser\n                // may return undefined from setTimeout/setInterval/setImmediate/requestAnimationFrame\n                if (handle && handle.ref && handle.unref && typeof handle.ref === 'function' &&\n                    typeof handle.unref === 'function') {\n                    task.ref = handle.ref.bind(handle);\n                    task.unref = handle.unref.bind(handle);\n                }\n                if (typeof handle === 'number' || handle) {\n                    return handle;\n                }\n                return task;\n            }\n            else {\n                // cause an error by calling it directly.\n                return delegate.apply(window, args);\n            }\n        });\n    clearNative =\n        patchMethod(window, cancelName, (delegate) => function (self, args) {\n            const id = args[0];\n            let task;\n            if (typeof id === 'number') {\n                // non nodejs env.\n                task = tasksByHandleId[id];\n            }\n            else {\n                // nodejs env.\n                task = id && id[taskSymbol];\n                // other environments.\n                if (!task) {\n                    task = id;\n                }\n            }\n            if (task && typeof task.type === 'string') {\n                if (task.state !== 'notScheduled' &&\n                    (task.cancelFn && task.data.isPeriodic || task.runCount === 0)) {\n                    if (typeof id === 'number') {\n                        delete tasksByHandleId[id];\n                    }\n                    else if (id) {\n                        id[taskSymbol] = null;\n                    }\n                    // Do not cancel already canceled functions\n                    task.zone.cancelTask(task);\n                }\n            }\n            else {\n                // cause an error by calling it directly.\n                delegate.apply(window, args);\n            }\n        });\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction patchCustomElements(_global, api) {\n    const { isBrowser, isMix } = api.getGlobalObjects();\n    if ((!isBrowser && !isMix) || !_global['customElements'] || !('customElements' in _global)) {\n        return;\n    }\n    const callbacks = ['connectedCallback', 'disconnectedCallback', 'adoptedCallback', 'attributeChangedCallback'];\n    api.patchCallbacks(api, _global.customElements, 'customElements', 'define', callbacks);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction eventTargetPatch(_global, api) {\n    if (Zone[api.symbol('patchEventTarget')]) {\n        // EventTarget is already patched.\n        return;\n    }\n    const { eventNames, zoneSymbolEventNames, TRUE_STR, FALSE_STR, ZONE_SYMBOL_PREFIX } = api.getGlobalObjects();\n    //  predefine all __zone_symbol__ + eventName + true/false string\n    for (let i = 0; i < eventNames.length; i++) {\n        const eventName = eventNames[i];\n        const falseEventName = eventName + FALSE_STR;\n        const trueEventName = eventName + TRUE_STR;\n        const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n        const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n        zoneSymbolEventNames[eventName] = {};\n        zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n        zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n    }\n    const EVENT_TARGET = _global['EventTarget'];\n    if (!EVENT_TARGET || !EVENT_TARGET.prototype) {\n        return;\n    }\n    api.patchEventTarget(_global, api, [EVENT_TARGET && EVENT_TARGET.prototype]);\n    return true;\n}\nfunction patchEvent(global, api) {\n    api.patchEventPrototype(global, api);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nZone.__load_patch('legacy', (global) => {\n    const legacyPatch = global[Zone.__symbol__('legacyPatch')];\n    if (legacyPatch) {\n        legacyPatch();\n    }\n});\nZone.__load_patch('queueMicrotask', (global, Zone, api) => {\n    api.patchMethod(global, 'queueMicrotask', delegate => {\n        return function (self, args) {\n            Zone.current.scheduleMicroTask('queueMicrotask', args[0]);\n        };\n    });\n});\nZone.__load_patch('timers', (global) => {\n    const set = 'set';\n    const clear = 'clear';\n    patchTimer(global, set, clear, 'Timeout');\n    patchTimer(global, set, clear, 'Interval');\n    patchTimer(global, set, clear, 'Immediate');\n});\nZone.__load_patch('requestAnimationFrame', (global) => {\n    patchTimer(global, 'request', 'cancel', 'AnimationFrame');\n    patchTimer(global, 'mozRequest', 'mozCancel', 'AnimationFrame');\n    patchTimer(global, 'webkitRequest', 'webkitCancel', 'AnimationFrame');\n});\nZone.__load_patch('blocking', (global, Zone) => {\n    const blockingMethods = ['alert', 'prompt', 'confirm'];\n    for (let i = 0; i < blockingMethods.length; i++) {\n        const name = blockingMethods[i];\n        patchMethod(global, name, (delegate, symbol, name) => {\n            return function (s, args) {\n                return Zone.current.run(delegate, global, args, name);\n            };\n        });\n    }\n});\nZone.__load_patch('EventTarget', (global, Zone, api) => {\n    patchEvent(global, api);\n    eventTargetPatch(global, api);\n    // patch XMLHttpRequestEventTarget's addEventListener/removeEventListener\n    const XMLHttpRequestEventTarget = global['XMLHttpRequestEventTarget'];\n    if (XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype) {\n        api.patchEventTarget(global, api, [XMLHttpRequestEventTarget.prototype]);\n    }\n});\nZone.__load_patch('MutationObserver', (global, Zone, api) => {\n    patchClass('MutationObserver');\n    patchClass('WebKitMutationObserver');\n});\nZone.__load_patch('IntersectionObserver', (global, Zone, api) => {\n    patchClass('IntersectionObserver');\n});\nZone.__load_patch('FileReader', (global, Zone, api) => {\n    patchClass('FileReader');\n});\nZone.__load_patch('on_property', (global, Zone, api) => {\n    propertyDescriptorPatch(api, global);\n});\nZone.__load_patch('customElements', (global, Zone, api) => {\n    patchCustomElements(global, api);\n});\nZone.__load_patch('XHR', (global, Zone) => {\n    // Treat XMLHttpRequest as a macrotask.\n    patchXHR(global);\n    const XHR_TASK = zoneSymbol('xhrTask');\n    const XHR_SYNC = zoneSymbol('xhrSync');\n    const XHR_LISTENER = zoneSymbol('xhrListener');\n    const XHR_SCHEDULED = zoneSymbol('xhrScheduled');\n    const XHR_URL = zoneSymbol('xhrURL');\n    const XHR_ERROR_BEFORE_SCHEDULED = zoneSymbol('xhrErrorBeforeScheduled');\n    function patchXHR(window) {\n        const XMLHttpRequest = window['XMLHttpRequest'];\n        if (!XMLHttpRequest) {\n            // XMLHttpRequest is not available in service worker\n            return;\n        }\n        const XMLHttpRequestPrototype = XMLHttpRequest.prototype;\n        function findPendingTask(target) {\n            return target[XHR_TASK];\n        }\n        let oriAddListener = XMLHttpRequestPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n        let oriRemoveListener = XMLHttpRequestPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n        if (!oriAddListener) {\n            const XMLHttpRequestEventTarget = window['XMLHttpRequestEventTarget'];\n            if (XMLHttpRequestEventTarget) {\n                const XMLHttpRequestEventTargetPrototype = XMLHttpRequestEventTarget.prototype;\n                oriAddListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                oriRemoveListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            }\n        }\n        const READY_STATE_CHANGE = 'readystatechange';\n        const SCHEDULED = 'scheduled';\n        function scheduleTask(task) {\n            const data = task.data;\n            const target = data.target;\n            target[XHR_SCHEDULED] = false;\n            target[XHR_ERROR_BEFORE_SCHEDULED] = false;\n            // remove existing event listener\n            const listener = target[XHR_LISTENER];\n            if (!oriAddListener) {\n                oriAddListener = target[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                oriRemoveListener = target[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            }\n            if (listener) {\n                oriRemoveListener.call(target, READY_STATE_CHANGE, listener);\n            }\n            const newListener = target[XHR_LISTENER] = () => {\n                if (target.readyState === target.DONE) {\n                    // sometimes on some browsers XMLHttpRequest will fire onreadystatechange with\n                    // readyState=4 multiple times, so we need to check task state here\n                    if (!data.aborted && target[XHR_SCHEDULED] && task.state === SCHEDULED) {\n                        // check whether the xhr has registered onload listener\n                        // if that is the case, the task should invoke after all\n                        // onload listeners finish.\n                        // Also if the request failed without response (status = 0), the load event handler\n                        // will not be triggered, in that case, we should also invoke the placeholder callback\n                        // to close the XMLHttpRequest::send macroTask.\n                        // https://github.com/angular/angular/issues/38795\n                        const loadTasks = target[Zone.__symbol__('loadfalse')];\n                        if (target.status !== 0 && loadTasks && loadTasks.length > 0) {\n                            const oriInvoke = task.invoke;\n                            task.invoke = function () {\n                                // need to load the tasks again, because in other\n                                // load listener, they may remove themselves\n                                const loadTasks = target[Zone.__symbol__('loadfalse')];\n                                for (let i = 0; i < loadTasks.length; i++) {\n                                    if (loadTasks[i] === task) {\n                                        loadTasks.splice(i, 1);\n                                    }\n                                }\n                                if (!data.aborted && task.state === SCHEDULED) {\n                                    oriInvoke.call(task);\n                                }\n                            };\n                            loadTasks.push(task);\n                        }\n                        else {\n                            task.invoke();\n                        }\n                    }\n                    else if (!data.aborted && target[XHR_SCHEDULED] === false) {\n                        // error occurs when xhr.send()\n                        target[XHR_ERROR_BEFORE_SCHEDULED] = true;\n                    }\n                }\n            };\n            oriAddListener.call(target, READY_STATE_CHANGE, newListener);\n            const storedTask = target[XHR_TASK];\n            if (!storedTask) {\n                target[XHR_TASK] = task;\n            }\n            sendNative.apply(target, data.args);\n            target[XHR_SCHEDULED] = true;\n            return task;\n        }\n        function placeholderCallback() { }\n        function clearTask(task) {\n            const data = task.data;\n            // Note - ideally, we would call data.target.removeEventListener here, but it's too late\n            // to prevent it from firing. So instead, we store info for the event listener.\n            data.aborted = true;\n            return abortNative.apply(data.target, data.args);\n        }\n        const openNative = patchMethod(XMLHttpRequestPrototype, 'open', () => function (self, args) {\n            self[XHR_SYNC] = args[2] == false;\n            self[XHR_URL] = args[1];\n            return openNative.apply(self, args);\n        });\n        const XMLHTTPREQUEST_SOURCE = 'XMLHttpRequest.send';\n        const fetchTaskAborting = zoneSymbol('fetchTaskAborting');\n        const fetchTaskScheduling = zoneSymbol('fetchTaskScheduling');\n        const sendNative = patchMethod(XMLHttpRequestPrototype, 'send', () => function (self, args) {\n            if (Zone.current[fetchTaskScheduling] === true) {\n                // a fetch is scheduling, so we are using xhr to polyfill fetch\n                // and because we already schedule macroTask for fetch, we should\n                // not schedule a macroTask for xhr again\n                return sendNative.apply(self, args);\n            }\n            if (self[XHR_SYNC]) {\n                // if the XHR is sync there is no task to schedule, just execute the code.\n                return sendNative.apply(self, args);\n            }\n            else {\n                const options = { target: self, url: self[XHR_URL], isPeriodic: false, args: args, aborted: false };\n                const task = scheduleMacroTaskWithCurrentZone(XMLHTTPREQUEST_SOURCE, placeholderCallback, options, scheduleTask, clearTask);\n                if (self && self[XHR_ERROR_BEFORE_SCHEDULED] === true && !options.aborted &&\n                    task.state === SCHEDULED) {\n                    // xhr request throw error when send\n                    // we should invoke task instead of leaving a scheduled\n                    // pending macroTask\n                    task.invoke();\n                }\n            }\n        });\n        const abortNative = patchMethod(XMLHttpRequestPrototype, 'abort', () => function (self, args) {\n            const task = findPendingTask(self);\n            if (task && typeof task.type == 'string') {\n                // If the XHR has already completed, do nothing.\n                // If the XHR has already been aborted, do nothing.\n                // Fix #569, call abort multiple times before done will cause\n                // macroTask task count be negative number\n                if (task.cancelFn == null || (task.data && task.data.aborted)) {\n                    return;\n                }\n                task.zone.cancelTask(task);\n            }\n            else if (Zone.current[fetchTaskAborting] === true) {\n                // the abort is called from fetch polyfill, we need to call native abort of XHR.\n                return abortNative.apply(self, args);\n            }\n            // Otherwise, we are trying to abort an XHR which has not yet been sent, so there is no\n            // task\n            // to cancel. Do nothing.\n        });\n    }\n});\nZone.__load_patch('geolocation', (global) => {\n    /// GEO_LOCATION\n    if (global['navigator'] && global['navigator'].geolocation) {\n        patchPrototype(global['navigator'].geolocation, ['getCurrentPosition', 'watchPosition']);\n    }\n});\nZone.__load_patch('PromiseRejectionEvent', (global, Zone) => {\n    // handle unhandled promise rejection\n    function findPromiseRejectionHandler(evtName) {\n        return function (e) {\n            const eventTasks = findEventTasks(global, evtName);\n            eventTasks.forEach(eventTask => {\n                // windows has added unhandledrejection event listener\n                // trigger the event listener\n                const PromiseRejectionEvent = global['PromiseRejectionEvent'];\n                if (PromiseRejectionEvent) {\n                    const evt = new PromiseRejectionEvent(evtName, { promise: e.promise, reason: e.rejection });\n                    eventTask.invoke(evt);\n                }\n            });\n        };\n    }\n    if (global['PromiseRejectionEvent']) {\n        Zone[zoneSymbol('unhandledPromiseRejectionHandler')] =\n            findPromiseRejectionHandler('unhandledrejection');\n        Zone[zoneSymbol('rejectionHandledHandler')] =\n            findPromiseRejectionHandler('rejectionhandled');\n    }\n});\n"]}